<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>开到荼蘼</title>
  <subtitle>幸福就像花季，开到荼蘼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://niaogege.site/"/>
  <updated>2017-03-12T13:32:17.341Z</updated>
  <id>http://niaogege.site/</id>
  
  <author>
    <name>鸟哥哥</name>
    <email>291003932@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GIT Three :Learn How to Use Git (三)</title>
    <link href="http://niaogege.site/2017/03/12/GIT-three-learn-how-to-use-git-%E4%B8%89/"/>
    <id>http://niaogege.site/2017/03/12/GIT-three-learn-how-to-use-git-三/</id>
    <published>2017-03-12T11:23:59.000Z</published>
    <updated>2017-03-12T13:32:17.341Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">读书的意义大概就是用生活所感去读书，用读书所得去生活吧</blockquote><br><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000" target="_blank" rel="external"><strong><em>原文链接</em></strong></a></p>
<h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><p>截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。</p>
<hr>
<a id="more"></a>
<h4 id="创建与合并分支"><a href="#创建与合并分支" class="headerlink" title="创建与合并分支"></a>创建与合并分支</h4><ul>
<li><code style="background:#2D9FB3;color:white;">$ git checkout -b dev </code>创建并切换到分支dev</li>
<li>然后，用git branch命令查看当前分支：</li>
<li>然后，我们就可以在dev分支上正常提交，比如对readme.txt做个修改，加上一行：</li>
<li>现在，dev分支的工作完成，我们就可以切换回master分支：<code style="background:#2D9FB3;color:white;">git checkout master</code>才是指向提交的，所以，HEAD指向的就是当前分支。</li>
<li>现在，我们把dev分支的工作成果合并到master分支上：<code style="background:#2D9FB3;color:white;">git merge dev</code> (git merge命令用于合并指定分支到当前分支)</li>
</ul>
<h4 id="分支合并时解决冲突"><a href="#分支合并时解决冲突" class="headerlink" title="分支合并时解决冲突"></a>分支合并时解决冲突</h4><p>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容，我们手动修改后保存<br>用带参数的git log也可以看到分支的合并情况：<br><code style="background:#2D9FB3;color:white;">$ git log –graph –pretty=oneline –abbrev-commit </code></p>
<h4 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h4><p>通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。</p>
<p>如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。<br>其他几步都一样，只是在合并分支时，请注意参数<code>–no-ff</code><br><code style="background:#2D9FB3;color:white;">$ git merge –no-ff -m “merge with no-ff” dev</code>合并后，我们用git log看看分支历史：<br><code>$ git log –graph –pretty=oneline –abbrev-commit</code>，强行删除分支用<code>git branch  -D dev</code></p>
<p><strong>分支策略</strong>：</p><p style="font-family:'微软雅黑'">首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p><p></p>
<h4 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h4><p>Git提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：<br><code style="background:#2D9FB3;color:white;">git stash</code>.原计划两个小时的bug修复只花了5分钟！现在，是时候接着回到dev分支干活了！用git stash list命令看看：工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；另一种方式是用<code style="background:#2D9FB3;color:white;">git stash pop</code>，恢复的同时把stash内容也删了。</p>
<hr>
<h4 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h4><ul>
<li>要查看远程库的信息，用<code style="background:#2D9FB3;color:white;">git remote -v </code>;因此，多人协作的工作模式通常是这样：</li>
<li>首先，可以试图用<code style="background:#2D9FB3;color:white;">git push origin branch-name</code>推送自己的修改；</li>
<li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li>
<li>如果合并有冲突，则解决冲突，并在本地提交；</li>
<li>没有冲突或者解决掉冲突后，再用<code style="background:#2D9FB3;color:white;">git push origin branch-name</code>推送就能成功！</li>
</ul>
<h5 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h5><ul>
<li>本地新建的分支如果不推送到远程，对其他人就是不可见的；</li>
<li>从本地推送分支，使用<code style="background:#2D9FB3;color:white;">git push origin branch-name</code>，如果推送失败，先用git pull抓取远程的新提交；</li>
<li>在本地创建和远程分支对应的分支，使用<code style="background:#2D9FB3;color:white;">git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</li>
<li>建立本地分支和远程分支的关联，使用<code style="background:#2D9FB3;color:white;">git branch –set-upstream branch-name origin/branch-name</code>；</li>
<li>从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;读书的意义大概就是用生活所感去读书，用读书所得去生活吧&lt;/blockquote&gt;&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000&quot;&gt;&lt;strong&gt;&lt;em&gt;原文链接&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h3&gt;&lt;p&gt;截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Git" scheme="http://niaogege.site/categories/Git/"/>
    
    
      <category term="GIT" scheme="http://niaogege.site/tags/GIT/"/>
    
      <category term="版本控制工具" scheme="http://niaogege.site/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>jQuery().on方法的使用详解</title>
    <link href="http://niaogege.site/2017/03/11/jQuery-on%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://niaogege.site/2017/03/11/jQuery-on方法的使用详解/</id>
    <published>2017-03-11T11:13:30.000Z</published>
    <updated>2017-03-11T14:23:58.841Z</updated>
    
    <content type="html"><![CDATA[<p>从厦门回来之后，两周没写博客了，主要是没时间，先放一张在厦门的靓照<br> <img src="../images/xiamen.jpg" alt="厦门"><br>  本文 <a href="http://blog.csdn.net/linshichen/article/details/51302683" target="_blank" rel="external"><strong>原文链接</strong></a> ，希望能帮到这些前端小白。用法：<strong>此方法可以在匹配元素上绑定一个或者多个事件处理函数。</strong> <strong>使用off()方法可以删除on()方法绑定的事件。</strong></p>
<hr>
<a id="more"></a>
<h3 id="语法结构一"><a href="#语法结构一" class="headerlink" title="语法结构一"></a>语法结构一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).on(events,[selector],[data],fn)</div></pre></td></tr></table></figure>
<ul>
<li>events:一个或多个用空格分隔的事件类型和可选的命名空间。</li>
<li>selector:可选。一个选择器字符串，用以过滤选定的元素，该选择器的子元素将调用处理程序。</li>
<li>data:可选。作为event.data属性值传递给事件对象的额外数据对象以供事件处理函数处理。</li>
<li>fn：该事件被触发时执行的函数。 false值也可以做一个函数的简写，返回false。</li>
</ul>
<hr>
<h4 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h4><p><strong><em>利用 data 参数为绑定的事件处理函数传递数据</em></strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123; </div><div class="line">  var newtext=<span class="string">"这是新文本"</span> </div><div class="line">  $(<span class="string">"div"</span>).on(<span class="string">"click"</span>,&#123;<span class="string">"mytext"</span>:newtext&#125;,<span class="keyword">function</span>(e)&#123; </div><div class="line">    $(this).text(e.data.mytext); </div><div class="line">  &#125;) </div><div class="line">&#125;) </div><div class="line">``` </div><div class="line"></div><div class="line"><span class="comment">####  实例二</span></div><div class="line"></div><div class="line">通过通过选择器字符串来过滤匹配元素的子元素中哪些可以响应绑定的事件。下面的代码中，类名为children的元素和它的子元素可以调用绑定的事件</div><div class="line"></div><div class="line">``` bash</div><div class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123; </div><div class="line">  var newtext=<span class="string">"这是新文本"</span> </div><div class="line">  $(<span class="string">".parent"</span>).on(<span class="string">"click"</span>,<span class="string">".children"</span>,&#123;<span class="string">"mytext"</span>:newtext&#125;,<span class="keyword">function</span>(e)&#123; </div><div class="line">    $(this).text(e.data.mytext); </div><div class="line">  &#125;) </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="语法结构二"><a href="#语法结构二" class="headerlink" title="语法结构二"></a>语法结构二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).on(object,[selector],[data])</div></pre></td></tr></table></figure>
<ul>
<li>object:一个用字符串表示的，一个或多个空格分隔的事件类型和可选的命名空间，值表示事件绑定的处理函数<br>其他两个参数与之前的结构一样</li>
</ul>
<h4 id="实例一-1"><a href="#实例一-1" class="headerlink" title="实例一"></a>实例一</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123; </div><div class="line">  var newtext=<span class="string">"这是新文本"</span> </div><div class="line">  $(<span class="string">"div"</span>).on(&#123;click:<span class="keyword">function</span>(e)&#123; </div><div class="line">    $(this).text(e.data.mytext); </div><div class="line">  &#125;&#125;,&#123;<span class="string">"mytext"</span>:newtext&#125;) </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><strong><em>以上代码中，事件类型和事件处理函数以对象的形式绑定的。</em></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从厦门回来之后，两周没写博客了，主要是没时间，先放一张在厦门的靓照&lt;br&gt; &lt;img src=&quot;../images/xiamen.jpg&quot; alt=&quot;厦门&quot;&gt;&lt;br&gt;  本文 &lt;a href=&quot;http://blog.csdn.net/linshichen/article/details/51302683&quot;&gt;&lt;strong&gt;原文链接&lt;/strong&gt;&lt;/a&gt; ，希望能帮到这些前端小白。用法：&lt;strong&gt;此方法可以在匹配元素上绑定一个或者多个事件处理函数。&lt;/strong&gt; &lt;strong&gt;使用off()方法可以删除on()方法绑定的事件。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="js" scheme="http://niaogege.site/categories/js/"/>
    
      <category term="jQuery" scheme="http://niaogege.site/categories/js/jQuery/"/>
    
    
      <category term="js" scheme="http://niaogege.site/tags/js/"/>
    
      <category term="jQuery" scheme="http://niaogege.site/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>随笔：厦门感想</title>
    <link href="http://niaogege.site/2017/02/23/%E9%9A%8F%E7%AC%94%EF%BC%9A%E5%8E%A6%E9%97%A8%E6%84%9F%E6%83%B3/"/>
    <id>http://niaogege.site/2017/02/23/随笔：厦门感想/</id>
    <published>2017-02-23T14:54:59.000Z</published>
    <updated>2017-02-23T15:09:15.364Z</updated>
    
    <content type="html"><![CDATA[<p>  最近几天主要忙着交接工作的事，周末还要陪着两位大佬去厦门走走，这也是够忙的。<br>今天早上体检，很高兴啊，自己体重降到了147斤，不错，继续保持，希望能降到140，身体质量指数(BMI22.1)。哈哈哈~<br>  明天是我在老公司的最后一天，只想平稳度过，好好享受余下的时光。很感谢公司的栽培，感谢李总、金老师、王老师、陆叔的厚爱，感谢小仇、范爷等闺蜜同事的关心和支持，内心很激动，有点舍不得，但，既然做了选择离开也是一件好事，希望公司越来越好，希望部门越来越能赚钱。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  最近几天主要忙着交接工作的事，周末还要陪着两位大佬去厦门走走，这也是够忙的。&lt;br&gt;今天早上体检，很高兴啊，自己体重降到了147斤，不错，继续保持，希望能降到140，身体质量指数(BMI22.1)。哈哈哈~&lt;br&gt;  明天是我在老公司的最后一天，只想平稳度过，好好享受余
    
    </summary>
    
      <category term="随笔" scheme="http://niaogege.site/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔，图片" scheme="http://niaogege.site/tags/%E9%9A%8F%E7%AC%94%EF%BC%8C%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap-Three:下拉菜单、导航、分页</title>
    <link href="http://niaogege.site/2017/02/18/Bootstrap-%E4%BA%8C-%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E3%80%81%E5%AF%BC%E8%88%AA%E3%80%81%E5%88%86%E9%A1%B5/"/>
    <id>http://niaogege.site/2017/02/18/Bootstrap-二-下拉菜单、导航、分页/</id>
    <published>2017-02-18T14:31:58.000Z</published>
    <updated>2017-02-20T13:58:18.175Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br>一鼓作气，再而衰，三而竭</blockquote></p>
<h3 id="dropdown"><a href="#dropdown" class="headerlink" title="dropdown"></a>dropdown</h3><ul>
<li>下拉菜单：3个元素，1.父级元素添加class为”dropdown” 2.给button添加动态交互的自定义属性：<code style="background:black;color:white">data-toggle</code>=”dropdown” 3.ul需要添加class为”dropdown-menu”</li>
</ul>
<hr>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;dropdown&quot;&gt;</div><div class="line">  &lt;button class=&quot;btn btn-default dropdown-toggle&quot; type=&quot;button&quot; id=&quot;dropdownMenu1&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;true&quot;&gt;</div><div class="line">    Dropdown</div><div class="line">    &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</div><div class="line">  &lt;/button&gt;</div><div class="line">  &lt;ul class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenu1&quot;&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<ul>
<li>下拉菜单样式<br>1.父级元素添加class为”open”，默认展开<br>2.默认左对齐，右对齐则为btn=”btn-blcok”,同时ul的class=”dropdown-menu-right”<br>3.li的标题突出。class=”dropdown-header”<br>4.分割线，给li添加class属性”divider”，内容居中用text-center</li>
</ul>
<hr>
<h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><p>  输入框组：1.input-group :输入框组，只针对输入框<br>  2.input-group-addon:给输入框组前后添加额外的元素<br>  3.input-group-btn:给输入框添加的额外元素是按钮<br>  4.给外层添加class为”input-group-btn”的包裹元素div,可以得到按钮组式的输入框组。不需要给父级元素添加class为”dropdown”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;col-lg-3&quot;&gt;</div><div class="line">				&lt;div class=&quot;input-group&quot;&gt;</div><div class="line">					&lt;div class=&quot;input-group-btn&quot;&gt;</div><div class="line">						&lt;button class=&quot;btn btn-info dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; type=&quot;button&quot;&gt;NIMa&lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/button&gt;</div><div class="line">						&lt;ul class=&quot;dropdown-menu&quot;&gt;</div><div class="line">							&lt;li&gt;&lt;a href=&quot;&quot; title=&quot;&quot;&gt;action&lt;/a&gt;&lt;/li&gt;</div><div class="line">							&lt;li&gt;&lt;a href=&quot;&quot; title=&quot;&quot;&gt;action&lt;/a&gt;&lt;/li&gt;</div><div class="line">							&lt;li&gt;&lt;a href=&quot;&quot; title=&quot;&quot;&gt;action&lt;/a&gt;&lt;/li&gt;</div><div class="line">						&lt;/ul&gt;</div><div class="line">					&lt;/div&gt;</div><div class="line">					&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;按钮上输入框&quot;/&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="img"><a href="#img" class="headerlink" title="img"></a>img</h3><p><code style="background:black;color:white;">img</code>的class为img-rounded(圆角图)、img-circle(圆图)、img-thumbnail(缩略图)、img-responsive(响应式图片)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;img/map.jpg&quot; usemap=&quot;#planetmap&quot; alt=&quot;&quot;/&gt;</div><div class="line">&lt;map name=&quot;planetmap&quot;&gt;</div><div class="line">	&lt;area shape=&quot;rect&quot; coords=&quot;510,240,660,300&quot; style=&quot;border:1px solid black&quot; href=&quot;index2.html&quot;/&gt;</div><div class="line">	&lt;area shape=&quot;rect&quot; coords=&quot;900,240,1100,300&quot; style=&quot;border:1px solid black&quot; href=&quot;index2.html&quot;/&gt;</div><div class="line">&lt;/map&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;一鼓作气，再而衰，三而竭&lt;/blockquote&gt;&lt;/p&gt;
&lt;h3 id=&quot;dropdown&quot;&gt;&lt;a href=&quot;#dropdown&quot; class=&quot;headerlink&quot; title=&quot;dropdown&quot;&gt;&lt;/a&gt;dropdown&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下拉菜单：3个元素，1.父级元素添加class为”dropdown” 2.给button添加动态交互的自定义属性：&lt;code style=&quot;background:black;color:white&quot;&gt;data-toggle&lt;/code&gt;=”dropdown” 3.ul需要添加class为”dropdown-menu”&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="bootstrap" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/bootstrap/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="bootstrap" scheme="http://niaogege.site/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Css特效：translate3d悬浮特效</title>
    <link href="http://niaogege.site/2017/02/18/css%E7%89%B9%E6%95%88%EF%BC%9Atranslate3d%E6%82%AC%E6%B5%AE%E7%89%B9%E6%95%88/"/>
    <id>http://niaogege.site/2017/02/18/css特效：translate3d悬浮特效/</id>
    <published>2017-02-18T12:21:59.000Z</published>
    <updated>2017-02-18T13:21:29.883Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">学习如逆水行舟，不进则退</blockquote>

<p>感觉每天如果不做笔记，自己要垮掉！学习是持久的事，不能只靠一时的激情来完成，其实，我大体也能感觉得到真正从事web前端后，工作压力肯定是非常大的！</p>
<hr>
<a id="more"></a>
<h4 id="perspective"><a href="#perspective" class="headerlink" title="perspective"></a>perspective</h4><p><code style="color:white;background:black;">perspective</code>: 500;perspective 属性定义 3D 元素距视图的距离，以像素计。该属性允许您改变 3D 元素查看 3D 元素的视图。</p>
<h4 id="transform-style"><a href="#transform-style" class="headerlink" title="transform-style"></a>transform-style</h4><p><code style="color:white;background:black;">transform-style</code>:preserve-3d;使被转换的子元素保留其 3D 转换,当值为<code style="color:white;background:black;">flat</code>时，子元素将不保留其 3D 位置。</p>
<h4 id="transform-translate3d-x-y-z"><a href="#transform-translate3d-x-y-z" class="headerlink" title="transform: translate3d(x,y,z)"></a>transform: translate3d(x,y,z)</h4><p>transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</p>
<blockquote>
<p>Css部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">*&#123;margin: 0; padding: 0;&#125;</div><div class="line">ul,li&#123;list-style: none;&#125;</div><div class="line">.container&#123;perspective: 1300;-webkit-perspective:1300;&#125;</div><div class="line">.boxList&#123;position:absolute;width: 630px;height:630px;left:50%;margin-left:-315px; -webkit-transform-style: preserve-3d;transform-style: preserve-3d;/*animation: a1 2s 1;*/transition: all 2s;&#125;</div><div class="line">.boxList li&#123;float: left;width: 200px;height: 200px;margin:5px;background: darkcyan;-webkit-transition: all 0.3s;transition: all 0.3s;&#125;</div><div class="line">.on li:hover&#123;-webkit-transform: translate3d(0,10px,50px);transform: translate3d(0,10px,50px);background:deepskyblue;box-shadow: 30px 30px 10px rgba(0, 0, 0, 0.5);&#125;</div><div class="line">.on&#123;-webkit-transform: rotateX(55deg) rotateY(0deg) rotateZ(35deg);transform: rotateX(55deg) rotateY(0deg) rotateZ(35deg);&#125;</div></pre></td></tr></table></figure></p>
<p>Js部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var list=document.querySelector(&apos;.boxList&apos;);</div><div class="line">		window.onload=function()&#123;</div><div class="line">			setInterval(transition,1000)</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">		function transition()&#123;</div><div class="line">			list.className=&apos;on boxList&apos;;</div><div class="line">		&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;学习如逆水行舟，不进则退&lt;/blockquote&gt;

&lt;p&gt;感觉每天如果不做笔记，自己要垮掉！学习是持久的事，不能只靠一时的激情来完成，其实，我大体也能感觉得到真正从事web前端后，工作压力肯定是非常大的！&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/css/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>myHeart：我心永恒</title>
    <link href="http://niaogege.site/2017/02/14/myHeart%EF%BC%9A%E6%88%91%E5%BF%83%E6%B0%B8%E6%81%92/"/>
    <id>http://niaogege.site/2017/02/14/myHeart：我心永恒/</id>
    <published>2017-02-14T15:54:51.000Z</published>
    <updated>2017-02-18T08:46:47.624Z</updated>
    
    <content type="html"><![CDATA[<p>今天是情人节，微信/微博都在撒狗粮，看看myHeart吧</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://ojjsl7zpc.bkt.clouddn.com/myHeart.gif?e=1487392781&token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:53339dxMjMwHLm1k-RjUMaQHdFg"></h2><p>源代码如下：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</div><div class="line">    &lt;title&gt;情人节心跳动动画&lt;/title&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">       html, body&#123;</div><div class="line">          width: 100%;</div><div class="line">          height: 100%;</div><div class="line">          min-width: 500px;</div><div class="line">          min-height: 500px;</div><div class="line">          overflow: hidden;</div><div class="line">        &#125;</div><div class="line">        .heart &#123;</div><div class="line">          position: absolute;</div><div class="line">          width: 100px;</div><div class="line">          height: 90px;</div><div class="line">          top: 50%;</div><div class="line">          left: 50%;</div><div class="line">          margin-top: -45px;</div><div class="line">          margin-left: -50px;</div><div class="line">        &#125;</div><div class="line">        .heart:before,</div><div class="line">        .heart:after &#123;</div><div class="line">          position: absolute;</div><div class="line">          content: &quot;&quot;;</div><div class="line">          left: 50px;</div><div class="line">          top: 0;</div><div class="line">          width: 50px;</div><div class="line">          height: 80px;</div><div class="line">          background: #fc2e5a;</div><div class="line">          border-radius: 50px 50px 0 0;</div><div class="line">          transform: rotate(-45deg);</div><div class="line">          transform-origin: 0 100%;</div><div class="line">        &#125;</div><div class="line">        .heart:after &#123;</div><div class="line">          left: 0;</div><div class="line">          transform: rotate(45deg);</div><div class="line">          transform-origin :100% 100%;</div><div class="line">        &#125;</div><div class="line">        .heart1&#123;</div><div class="line">           animation: heart-anim 1s linear .4s infinite;</div><div class="line">        &#125;</div><div class="line">        .heart2&#123;</div><div class="line">           animation: pounding .5s linear infinite alternate;</div><div class="line">        &#125;</div><div class="line">        .heart1:after, .heart1:before&#123;</div><div class="line">          background-color: #ff7693;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @keyframes pounding&#123;</div><div class="line">          0%&#123; transform: scale(1.5); &#125;</div><div class="line">          100%&#123; transform: scale(1); &#125;</div><div class="line">        &#125;</div><div class="line">		@-moz-keyframes pounding&#123;</div><div class="line">          0%&#123; transform: scale(1.5); &#125;</div><div class="line">          100%&#123; transform: scale(1); &#125;</div><div class="line">        &#125;</div><div class="line">		@-webkit-keyframes pounding&#123;</div><div class="line">          0%&#123; transform: scale(1.5); &#125;</div><div class="line">          100%&#123; transform: scale(1); &#125;</div><div class="line">        &#125;</div><div class="line">		@-ms-keyframes pounding&#123;</div><div class="line">          0%&#123; transform: scale(1.5); &#125;</div><div class="line">          100%&#123; transform: scale(1); &#125;</div><div class="line">        &#125;</div><div class="line">        @keyframes heart-anim &#123;</div><div class="line">          46% &#123;</div><div class="line"></div><div class="line">            transform: scale(1);</div><div class="line">          &#125;</div><div class="line">          50% &#123;</div><div class="line">            transform: scale(1.3);</div><div class="line">          &#125;</div><div class="line">          52% &#123;</div><div class="line">            transform: scale(1.5);</div><div class="line">          &#125;</div><div class="line">          55% &#123;</div><div class="line">            transform: scale(3);</div><div class="line">          &#125;</div><div class="line">          100% &#123;</div><div class="line">            opacity: 0;</div><div class="line">            transform: scale(50);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">		@-moz-keyframes heart-anim &#123;</div><div class="line">          46% &#123;</div><div class="line"></div><div class="line">            transform: scale(1);</div><div class="line">          &#125;</div><div class="line">          50% &#123;</div><div class="line">            transform: scale(1.3);</div><div class="line">          &#125;</div><div class="line">          52% &#123;</div><div class="line">            transform: scale(1.5);</div><div class="line">          &#125;</div><div class="line">          55% &#123;</div><div class="line">            transform: scale(3);</div><div class="line">          &#125;</div><div class="line">          100% &#123;</div><div class="line">            opacity: 0;</div><div class="line">            transform: scale(50);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">		@-webkit-keyframes heart-anim &#123;</div><div class="line">          46% &#123;</div><div class="line"></div><div class="line">            transform: scale(1);</div><div class="line">          &#125;</div><div class="line">          50% &#123;</div><div class="line">            transform: scale(1.3);</div><div class="line">          &#125;</div><div class="line">          52% &#123;</div><div class="line">            transform: scale(1.5);</div><div class="line">          &#125;</div><div class="line">          55% &#123;</div><div class="line">            transform: scale(3);</div><div class="line">          &#125;</div><div class="line">          100% &#123;</div><div class="line">            opacity: 0;</div><div class="line">            transform: scale(50);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">		@-ms-keyframes heart-anim &#123;</div><div class="line">          46% &#123;</div><div class="line"></div><div class="line">            transform: scale(1);</div><div class="line">          &#125;</div><div class="line">          50% &#123;</div><div class="line">            transform: scale(1.3);</div><div class="line">          &#125;</div><div class="line">          52% &#123;</div><div class="line">            transform: scale(1.5);</div><div class="line">          &#125;</div><div class="line">          55% &#123;</div><div class="line">            transform: scale(3);</div><div class="line">          &#125;</div><div class="line">          100% &#123;</div><div class="line">            opacity: 0;</div><div class="line">            transform: scale(50);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">	&lt;img scr=&quot;http://ojjsl7zpc.bkt.clouddn.com/myHeart.gif?e=1487091193&amp;token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:nDhjIQhcA5hcRQ-bZFh3skYsOls&quot; alt=&quot;niaogege-myHeart&quot; /&gt;</div><div class="line">  &lt;p&gt;</div><div class="line">  情人节又到了，一大波男士在狠狠地吃狗粮！！</div><div class="line"> &lt;/p&gt;</div><div class="line">    &lt;!--外圈大心--&gt;</div><div class="line">   &lt;div class=&quot;heart heart1&quot;&gt;&lt;/div&gt;</div><div class="line">  &lt;!--里面小心--&gt;</div><div class="line">   &lt;div class=&quot;heart heart2&quot;&gt;&lt;/div&gt;</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是情人节，微信/微博都在撒狗粮，看看myHeart吧&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;http://ojjsl7zpc.bkt.clouddn.com/myHeart.gif?e=1487392781&amp;token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:53339dxMjMwHLm1k-RjUMaQHdFg&quot; /&gt;&lt;/h2&gt;&lt;p&gt;源代码如下：&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/css/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>jQuery:常用的jQuery效果</title>
    <link href="http://niaogege.site/2017/02/14/jQuery-%E5%B8%B8%E7%94%A8%E7%9A%84jQuery%E6%95%88%E6%9E%9C/"/>
    <id>http://niaogege.site/2017/02/14/jQuery-常用的jQuery效果/</id>
    <published>2017-02-14T13:31:27.000Z</published>
    <updated>2017-03-11T11:20:34.433Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center" style="color:green;">“给我一个支点，我可以翘起整个世界”<br>——阿基米德</blockquote><br>今天又面试了一家互联网公司，是做互联网在线教育的，很荣幸收到offer，我应聘的是web前端开发工程师这个岗位，到公司主要做静态页面制作以及一些跟后端数据的绑定和交互。真的十分感谢吴大哥和COO，你们都是我人生路上的贵人，我定不会辜负两位领导所托，一定加强自身的技术，为公司带来实质性的贡献(what a pity!有点遗憾，最后没去。还是很感谢吴大哥和<a href="http://www.ehailuo.com/" target="_blank" rel="external"><strong>南京云起</strong></a>)。</p>
<h4 id="淘宝网站的搜索框显示和隐藏效果"><a href="#淘宝网站的搜索框显示和隐藏效果" class="headerlink" title="淘宝网站的搜索框显示和隐藏效果"></a>淘宝网站的搜索框显示和隐藏效果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">window.onscroll = function()&#123;</div><div class="line">    var t = document.documentElement.scrollTop || document.body.scrollTop; //页面下拉时的数据 </div><div class="line">	if(t&gt;80)&#123; //当页面下拉到大于80的时候显示下的DIV,默认是隐藏的。</div><div class="line">	$(&quot;.fdnav&quot;).css(&#123;display:&quot;block&quot;&#125;);                 </div><div class="line">	&#125;else&#123; </div><div class="line">	$(&quot;.fdnav&quot;).css(&#123;display:&quot;none&quot;&#125;);      </div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<h4 id="网站侧边导航条伸缩效果的运用"><a href="#网站侧边导航条伸缩效果的运用" class="headerlink" title="网站侧边导航条伸缩效果的运用"></a>网站侧边导航条伸缩效果的运用</h4><p>用到了mouseover事件和mouseleave事件，其实这里有个问题是往右移还是往左移，具体得实践实践，今天先放上代码，明天实践一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">	$(&quot;.wsde&quot;).mouseover(function()&#123;//class为wsde的默认css是:position: fixed; right: 1px; width:57px; overflow: hidden;</div><div class="line">	  $(&quot;.wsde&quot;).stop().animate(&#123;&apos;width&apos;:&apos;200px&apos;&#125;);</div><div class="line">	  &#125;);</div><div class="line">	$(&quot;.wsde&quot;).mouseleave(function()&#123;</div><div class="line">	  $(&quot;.wsde&quot;).stop().animate(&#123;&apos;width&apos;:&apos;57px&apos;&#125;);</div><div class="line">	  &#125;); </div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<hr>
<h4 id="网站图片预加载Jquery教程效果"><a href="#网站图片预加载Jquery教程效果" class="headerlink" title="网站图片预加载Jquery教程效果"></a>网站图片预加载Jquery教程效果</h4><p>一块是HTML代码，主要用到的是h5最新定义的自带属性，以data开头<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;logo.png//默认图&quot; data=&quot;bg.png//最终的图片来源&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>jQuery示例代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$(&apos;img[data]&apos;).load(function()&#123;//运行Jquery库中的默认类</div><div class="line">   var __this = $(this);  </div><div class="line">   var url = __this.attr(&apos;data&apos;);  </div><div class="line">   var src = __this.attr(&apos;src&apos;);  </div><div class="line">   if(url ==&quot; &quot;|| url == src)//这里判断如果图片实际地址不存在或者已经加载不处理  </div><div class="line">   &#123;  </div><div class="line">        return;  </div><div class="line">   &#125;  </div><div class="line">    var img =new Image();//实例化一个图片的对象，这里的Image居然也是引用数据类型  </div><div class="line">    img.src = url;//将要显示的图片加载进来  </div><div class="line">     if(img.complete)//如果图片已经加载存在浏览器缓存中直接处理, complete 属性来讲，IE是根据图片是否显示过来判断，就是说当加载的图片显示出来后，complete 属性的值才为 true ，否则一直是 false ，和以前是否加载过该张图片没有关系  </div><div class="line">     &#123;  </div><div class="line">        __this.attr(&apos;src&apos;,url);//将要显示的图片替换过来  </div><div class="line">        return;  </div><div class="line">     &#125;  </div><div class="line">     img.onload =function()&#123;//要显示的图片加载完成后做处理  </div><div class="line">        __this.attr(&apos;src&apos;,url);  //attr(&apos;src&apos;,url);</div><div class="line">      &#125;  </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<hr>
<h4 id="自动验证提交表单的Jqeury效果"><a href="#自动验证提交表单的Jqeury效果" class="headerlink" title="自动验证提交表单的Jqeury效果"></a>自动验证提交表单的Jqeury效果</h4><h4 id="网站上的select下拉菜单（二级select）美化体验Jquery效果"><a href="#网站上的select下拉菜单（二级select）美化体验Jquery效果" class="headerlink" title="网站上的select下拉菜单（二级select）美化体验Jquery效果:"></a>网站上的select下拉菜单（二级select）美化体验Jquery效果:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">//select下拉菜单html部分示例代码：</div><div class="line">      &lt;div class=&quot;kscz1_1&quot;&gt;请选择游戏&lt;/div&gt;</div><div class="line">      &lt;div class=&quot;kscz1_2&quot;&gt;请选择面值&lt;/div&gt;</div><div class="line">      &lt;div  class=&quot;kscz1_3&quot;&gt;</div><div class="line">          &lt;form class=&quot;woqu&quot; action=&quot;/e/search/index.php&quot; method=&quot;post&quot; onSubmit=&quot;return checkSubmit();&quot;&gt;</div><div class="line">            &lt;input id=&quot;proid&quot; type=&quot;hidden&quot; name=&quot;proid&quot; value=&quot;&quot;&gt;</div><div class="line">            &lt;input id=&quot;price&quot; type=&quot;hidden&quot; name=&quot;price&quot; value=&quot;&quot;&gt;</div><div class="line">            &lt;input type=&quot;submit&quot; class=&quot;dianji&quot; value=&quot;&quot;&gt;</div><div class="line">          &lt;/form&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line"></div><div class="line">      &lt;div class=&quot;kscz1_1se&quot; &gt;</div><div class="line">	   &lt;ul id=&quot;kscz1_1se&quot;&gt;</div><div class="line">		  &lt;li price=&quot;50,20&quot; proid=&quot;5&quot;&gt;大专自卫队苛夺&lt;/li&gt; //price中的为select二级选项</div><div class="line">		  &lt;li price=&quot;70,50,30&quot; proid=&quot;33&quot;&gt;磊地在傜&lt;/li&gt;</div><div class="line">	   &lt;/ul&gt;</div><div class="line">       &lt;/div&gt;</div><div class="line">		&lt;div class=&quot;kscz1_1pri&quot; &gt;</div><div class="line">		&lt;ul id=&quot;kscz1_1pri&quot;&gt;</div><div class="line">		&lt;/ul&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line"></div><div class="line">		&lt;form class=&quot;woqu&quot; action=&quot;&quot; method=&quot;post&quot; onSubmit=&quot;return checkSubmit();&quot;&gt;</div><div class="line">						&lt;input id=&quot;proid&quot; type=&quot;hidden&quot; name=&quot;proid&quot; value=&quot;&quot;&gt;</div><div class="line">						&lt;input id=&quot;price&quot; type=&quot;hidden&quot; name=&quot;price&quot; value=&quot;&quot;&gt;</div><div class="line">						&lt;input type=&quot;submit&quot; class=&quot;dianji&quot; value=&quot;&quot;&gt;</div><div class="line">		&lt;/form&gt;</div><div class="line"></div><div class="line">主要CSS样式，过其实的都不写出来了，这是两个隐藏的下拉表div样式：</div><div class="line">.kscz1_1se &#123;</div><div class="line">overflow: hidden;</div><div class="line">width: 214px;</div><div class="line">height: 330px;</div><div class="line">position: absolute;</div><div class="line">border: 1px solid #E0E0E0;</div><div class="line">left: 50%;</div><div class="line">top: 0;</div><div class="line">z-index: 1000;</div><div class="line">display: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.kscz1_1pri &#123;</div><div class="line">overflow: hidden;</div><div class="line">width: 94px;</div><div class="line">height: 130px;</div><div class="line">position: absolute;</div><div class="line">border: 1px solid #E0E0E0;</div><div class="line">left: 50%;</div><div class="line">top: 0;</div><div class="line">z-index: 1000;</div><div class="line">display: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//select下拉菜单Jquery部分代码：</div><div class="line">&lt;script&gt;</div><div class="line">$(document).ready(function()&#123;</div><div class="line">$(&quot;.kscz1_1&quot;).mouseover(function()&#123;//鼠标移到select上显下拉效果</div><div class="line">$(&quot;.kscz1_1se&quot;).css(&#123;display:&apos;block&apos;&#125;);</div><div class="line">$(&quot;#kscz1_1se&quot;).css(&#123;display:&apos;block&apos;&#125;);</div><div class="line">  &#125;);</div><div class="line">$(&quot;.kscz1_1se&quot;).mouseleave(function()&#123;//鼠标移出为隐藏下效果</div><div class="line">$(this).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">$(this).find(&quot;#kscz1_1se&quot;).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">  &#125;);</div><div class="line">$(&quot;.kscz1_1se li&quot;).mousedown(function()&#123;//选择下拉中的一个选项，进行赋值，并对第二项下拉增加内容</div><div class="line">var value = $(this).attr(&quot;price&quot;); </div><div class="line">var value2 = $(this).text(); </div><div class="line">var value3 = $(this).attr(&quot;proid&quot;);</div><div class="line">var pricetext=&apos;&apos;;</div><div class="line">pricenum = value.split(&quot;,&quot;);</div><div class="line">for(var i=0;i&lt;pricenum.length;i++)</div><div class="line">&#123;</div><div class="line">pricetext=pricetext+&apos;&lt;li&gt;&apos;+pricenum[i]+&apos;&lt;/li&gt;&apos;;</div><div class="line">&#125;</div><div class="line">$(&quot;.kscz1_1&quot;).html(value2);</div><div class="line">$(&quot;.kscz1_1se&quot;).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">$(&quot;.kscz1_1se&quot;).find(&quot;#kscz1_1se&quot;).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">$(&quot;#kscz1_1pri&quot;).html(pricetext);</div><div class="line">$(&quot;.kscz1_2&quot;).html(&apos;请选择面值&apos;);</div><div class="line">$(&quot;#proid&quot;).val(value3);</div><div class="line">  &#125;);</div><div class="line">$(&quot;.kscz1_2&quot;).mouseover(function()&#123;//对select二级赋值</div><div class="line">if($(&quot;.kscz1_1&quot;).text()!=&apos;请选择游戏&apos;)&#123;$(&quot;.kscz1_1pri&quot;).css(&#123;display:&apos;block&apos;&#125;);&#125;</div><div class="line">  &#125;);</div><div class="line">$(&quot;.kscz1_1pri&quot;).mouseleave(function()&#123;//隐藏select二级下拉表单</div><div class="line">$(this).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">&#125;);</div><div class="line">$(&quot;.kscz1_1pri li&quot;).live(&apos;click&apos;,function()&#123;//对select二级赋值及表单input为price赋值</div><div class="line">var value2 = $(this).text(); </div><div class="line">$(&quot;.kscz1_2&quot;).html(value2);</div><div class="line">$(&quot;.kscz1_1pri&quot;).css(&#123;display:&apos;none&apos;&#125;);</div><div class="line">$(&quot;#price&quot;).val(value2);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line">function checkSubmit()&#123;//验证提交表单</div><div class="line">if (document.getElementById(&apos;proid&apos;).value==&quot;&quot;) &#123;</div><div class="line">alert(&quot;请选择游戏&quot;);</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">if (document.getElementById(&apos;price&apos;).value==&quot;&quot;) &#123;</div><div class="line">alert(&quot;请选择充值金额&quot;);</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot; style=&quot;color:green;&quot;&gt;“给我一个支点，我可以翘起整个世界”&lt;br&gt;——阿基米德&lt;/blockquote&gt;&lt;br&gt;今天又面试了一家互联网公司，是做互联网在线教育的，很荣幸收到offer，我应聘的是web前端开发工程师这个岗位，到公司主要做静态页面制作以及一些跟后端数据的绑定和交互。真的十分感谢吴大哥和COO，你们都是我人生路上的贵人，我定不会辜负两位领导所托，一定加强自身的技术，为公司带来实质性的贡献(what a pity!有点遗憾，最后没去。还是很感谢吴大哥和&lt;a href=&quot;http://www.ehailuo.com/&quot;&gt;&lt;strong&gt;南京云起&lt;/strong&gt;&lt;/a&gt;)。&lt;/p&gt;
&lt;h4 id=&quot;淘宝网站的搜索框显示和隐藏效果&quot;&gt;&lt;a href=&quot;#淘宝网站的搜索框显示和隐藏效果&quot; class=&quot;headerlink&quot; title=&quot;淘宝网站的搜索框显示和隐藏效果&quot;&gt;&lt;/a&gt;淘宝网站的搜索框显示和隐藏效果&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;window.onscroll = function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var t = document.documentElement.scrollTop || document.body.scrollTop; //页面下拉时的数据 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if(t&amp;gt;80)&amp;#123; //当页面下拉到大于80的时候显示下的DIV,默认是隐藏的。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	$(&amp;quot;.fdnav&amp;quot;).css(&amp;#123;display:&amp;quot;block&amp;quot;&amp;#125;);                 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;else&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	$(&amp;quot;.fdnav&amp;quot;).css(&amp;#123;display:&amp;quot;none&amp;quot;&amp;#125;);      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="js" scheme="http://niaogege.site/categories/js/"/>
    
      <category term="jQuery" scheme="http://niaogege.site/categories/js/jQuery/"/>
    
    
      <category term="js" scheme="http://niaogege.site/tags/js/"/>
    
      <category term="jQuery" scheme="http://niaogege.site/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题（3）：知识点总结</title>
    <link href="http://niaogege.site/2017/02/12/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%883%EF%BC%89%EF%BC%9A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://niaogege.site/2017/02/12/前端面试题（3）：知识点总结/</id>
    <published>2017-02-12T03:58:43.000Z</published>
    <updated>2017-03-04T10:10:39.423Z</updated>
    
    <content type="html"><![CDATA[<p> <blockquote class="blockquote-center" style="font-size:1rem;">“基础知识还是不够扎实啊”</blockquote><br></p>
<p>最近，面试了一家高大上的公司，很感动，感动地快落泪了。面试完之后最大的感受就是：老子有生之年一定要去这种类似的公司上班，如果现在不够格的话，那就拿起键盘，使劲地给我敲打。面试的过程跟之前的不太一样，先是笔试，给你大约半个小时的时间填写，完了在面试你。</p>
<p>笔试题，下面我会一一列举出来，找到自己的不足，稳步提升，下次的面试成功的几率就大一点。面试的时候，感觉面试官应该不是技术岗位出身，面试的内容与产品的内容多一点，可惜了，自己答得不是很满意，其中，<strong>面试官问你：你觉得你的优点和缺点是什么</strong>，这时候我应该在开放一点，当时有点拘谨了，还有<strong><i>你对未来的发展规划是什么</i></strong>，我回答的很浅显。优点：1.积极进取，乐观向上2.乐于助人3.有很好的三观4.喜欢接受不同的chanllege 5.执行力较强。缺点1.自尊心较强2.有时比较喜欢钻牛角尖，反正类似的问题，自己面试之前要好好想想，不能浅显地回答。还是就是关于薪资的问题，不能说高也不能贬低自己，”每个人的劳动成果应该与所得薪水成正比，现阶段，技术不是很强，所以客观来讲5k差不多，重要的是多学习，多学本领”<code>write less do more</code>。(后来到了公司才知道，面试官是我的直接上司，公司的副总裁童总)</p>
<hr>
<h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><a id="more"></a>
<ul>
<li>w3c标准</li>
<li>说说对Html5和css3的了解</li>
<li>BFC的理解</li>
<li>iframe的缺点</li>
<li>this对象的理解</li>
<li>如何实现继承</li>
<li>console的属性和方法</li>
<li>从输入URL到网页最终展现到用户面前，发生了事情</li>
<li>如何选取10——99的5个随机数，并进行排序</li>
<li>网站性能优化</li>
<li>数组的合并和删除项</li>
<li>异步加载和延迟加载</li>
<li>webStorage 和cookie 的区别</li>
<li>你对前端工程师的理解和未来期望</li>
</ul>
<hr>
<h3 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h3><h4 id="w3c-标准"><a href="#w3c-标准" class="headerlink" title="w3c 标准"></a>w3c 标准</h4><p>W3C的各类技术标准在努力为各类应用的开发打造一个开放的Web平台（Open Web Platform）。尽管这个开放Web平台的边界在不断延伸，产业界认为HTML5将是这个平台的核心，平台的能力将依赖于W3C及其合作伙伴正在创建的一系列Web技术，包括CSS, SVG, WOFF, 语义Web，及XML和各类应用编程接口（APIs）</p>
<h4 id="说说对Html5和css3的了解"><a href="#说说对Html5和css3的了解" class="headerlink" title="说说对Html5和css3的了解"></a>说说对Html5和css3的了解</h4><p>CSS 用于控制网页的样式和布局。 CSS3 是最新的 CSS 标准。HTML5 是定义 HTML 标准的最新进展，HTML 5有两大特点：首先，强化了 Web 网页的表现性能。其次，追加了本地数据库等 Web 应用的功能。</p>
<h4 id="BFC的理解"><a href="#BFC的理解" class="headerlink" title="BFC的理解"></a>BFC的理解</h4><p>BFC(block formatting context)块级格式化上下文：是Web页面中盒模型布局的CSS渲染模式。它的定位体系属于常规文档流。一个独立的块级渲染区域，该区域拥有一套渲染规则来约束块级盒子的布局，且与区域外部无关。</p>
<h6 id="CSS2-1中规定满足下列CSS声明之一的元素便会生成BFC。"><a href="#CSS2-1中规定满足下列CSS声明之一的元素便会生成BFC。" class="headerlink" title="CSS2.1中规定满足下列CSS声明之一的元素便会生成BFC。"></a>CSS2.1中规定满足下列CSS声明之一的元素便会生成BFC。</h6><ul>
<li>根元素</li>
<li>float的值不为none，则float:right/left;float 属性定义元素在哪个方向浮动。</li>
<li>overflow的值不为visible,则overflow:hidden/scroll/auto(如果内容被修剪浏览器会显示滚动条以便查看其余的内容)<br>+display的值为inline-block(行内块元素)、table-cell(此元素会作为一个表格单元格显示)、table-caption(此元素会作为一个表格标题显示)</li>
<li>position的值为absolute或fixed,不为relative</li>
</ul>
<h6 id="浏览器对于BFC这块区域的约束规则如下："><a href="#浏览器对于BFC这块区域的约束规则如下：" class="headerlink" title="浏览器对于BFC这块区域的约束规则如下："></a>浏览器对于BFC这块区域的约束规则如下：</h6><p>1.BFC导致的外边距折叠<br>在常规文档流中，盒子都是从包含块的顶部开始一个接着一个垂直堆放。两个兄弟盒子之间的垂直距离是由他们个体的外边距所决定的，但不是他们的两个外边距之和。<br>2.创建新的BFC来防止外边距折叠<br>因为我们在前面讨论了BFC导致外边距折叠的问题。但我们必须牢记在心的是毗邻块盒子的垂直外边距折叠只有他们是在同一BFC时才会发生。如果他们属于不同的BFC，他们之间的外边距将不会折叠。所以通过创建一个新的BFC我们可以防止外边距折叠。<br>3.使用BFC来包含浮动<br>一个BFC可以包含浮动。很多时候我们会碰到这种情况，一个容器里有浮动元素。由于这个原因，容器元素没有高度，它的浮动孩子将会脱离页面的常规流。我们通常使用清除浮动来解决这个问题，最受欢迎的方法是使用一个clearfix的伪类元素。但我们同样可以通过定义一个BFC来达到这个目的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.con1&#123;background:green;display:inline-block;或者overflow:hidden;&#125;</div><div class="line">.con1 div&#123;float:left;margin:10px;background-color:yellow;&#125;</div></pre></td></tr></table></figure></p>
<p>4.在多列布局中使用BFC<br>如果我们正在创建的一个多列布局占满了整个容器的宽度，在某些浏览器中最后一列有时候将会被挤到下一行。会发生这样可能是因为浏览器舍入（取整）了列的宽度使得总和的宽度超过了容器的宽度。然而，如果我们在一个列的布局中建立了一个新的BFC，它将会在前一列填充完之后的后面占据所剩余的空间。</p>
<h4 id="iframe的缺点"><a href="#iframe的缺点" class="headerlink" title="iframe的缺点"></a>iframe的缺点</h4><p>1.ifame框架结构会让人感到迷惑。框架较多的话可能会出现上下左右滚动，会分散访问者的注意力，用户体验差。<br>2.无法被搜索引擎抓取，不利于搜索引擎优化<br>3.设备兼容性差，不能适配移动设备<br>4.会增加服务器的http请求。<br>基本上都是用ajax来代替iframe，iframe慢慢淡出前端开发</p>
<hr>
<h4 id="浅谈对this对象的理解"><a href="#浅谈对this对象的理解" class="headerlink" title="浅谈对this对象的理解"></a>浅谈对this对象的理解</h4><p>this对象是在运行时基于函数的执行环境绑定的，在全局函数中，this值window，而当函数被作为某个对象的方法调用时，this等于那个对象，如果有new关键字，this指向new出来的那个对象，在事件中，this指向出发这个事件的对象，特殊的是，在IE的attachEvent中this总是指向全局对象window</p>
<hr>
<h4 id="console的属性和方法"><a href="#console的属性和方法" class="headerlink" title="console的属性和方法"></a>console的属性和方法</h4><p>console的方法和属性，请移步<a href="http://blog.sina.com.cn/s/blog_13f7890570102wmzv.html" target="_blank" rel="external">不可思议的console：console方法属性大全</a></p>
<ol>
<li>console.assert(exp,mes)<br>作用：对输入的表达式进行判断，当表达式为true时，不执行在控制台输出信息的操作，当表达式为false时，在控制台中输出对应的信息。<br>参数：exp表示表达式，mes表示想要输出的信息。</li>
<li>console.clear()<br>作用：清空控制台输出的信息。<br>参数：无参数。</li>
<li>console.count([mes])<br>作用：用来统计函数被执行的次数。<br>参数：可选的参数，主要用来标识是哪个函数执行的次数。<br>eg:<code>console.count(‘outputNumber被执行的次数’);</code></li>
<li>console.debug(mes)<br>作用：用于输出调试信息。<br>参数：mes用于表示想要输出的信息。</li>
<li>console.dir(obj|dom)<br>作用：可以详细查看对象的方法，将DOM节点以DOM树的结构进行输出。<br>参数：二选一即可，obj表示对象，dom表示一个DOM节点。<br>示例代码1：文章开始部分的console.dir(console)，这里不再做赘述。<br>6.console.dirxml(dom)<br>作用：打印对应都没元素中的html内容。<br>参数：dom表示html中的DOM节点。<br>7.console.error(mes)<br>作用：输出错误信息。<br>参数：mes表示想要输出的错误信息的内容。<br>其他：可类比console.debug()。<br>8.console.info(mes)<br>作用：在控制台中输出提示信息。<br>参数：mes表示输出信息的内容。<br>说明：类比console.debug()与console.error()。<br>9.console.log(mes)<br>作用：在控制台输出普通信息，此项为console最为常用的方法。<br>参数：mes标识想要输出的信息的内容。<br>10.console.memory<br>作用；用于显示此刻使用的内存信息<br>11.console.profile(name)、console.profileEnd(name)<br>作用：两个方法配合使用用来查看CPU使用相关信息。<br>参数：name起一个标识的作用。<br>12.console.trace([name])<br>作用：用来追踪函数的调用轨迹。<br>参数：name表示这个轨迹的名称，是一个可选的参数</li>
<li>console.warn(mes)<br>作用：在控制台中显示警告信息。<br>参数：mes表示警告信息的内容。</li>
</ol>
<hr>
<h4 id="从输入URL到网页最终展现到用户面前，发生了事情"><a href="#从输入URL到网页最终展现到用户面前，发生了事情" class="headerlink" title="从输入URL到网页最终展现到用户面前，发生了事情"></a>从输入URL到网页最终展现到用户面前，发生了事情</h4><p>1.查找浏览器缓存<br>2.DNS解析，查找该域名对应的IP地址、重定向（301）<br>3.进行http协议会话<br>4.客户端发送报头(请求报头)<br>5.服务器端回馈报头留(相应报头)<br>6.html文档开始下载<br>7.文档树建立，根据标记请求所需指定的MIME类型的文件<br>8.文件显示</p>
<h4 id="如何选取10——99的5个随机数，并进行从小到大排序"><a href="#如何选取10——99的5个随机数，并进行从小到大排序" class="headerlink" title="如何选取10——99的5个随机数，并进行从小到大排序"></a>如何选取10——99的5个随机数，并进行从小到大排序</h4><p>1.Math对象的舍入方法和random()方法<br>Math.floor()执行向下舍入，总是将数值向下舍入为最近的整数<br>Math.floor(Math.random()*可能的总数+第一个可能的值);//<br>2.compare()比较函数，夹杂sort()方法;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">function suiJi(startNum,endNum,item)&#123;</div><div class="line">		var compare = function(num1,num2)&#123;  //排序的方法</div><div class="line">		if(num1&gt;num2)&#123;return 1;&#125;</div><div class="line">		else if(num1&lt;num2)&#123;return -1;&#125;</div><div class="line">		else&#123;return 0;&#125;</div><div class="line">		&#125;</div><div class="line">		var btn = document.querySelector(&apos;button&apos;);</div><div class="line">		var span = document.getElementsByClassName(&apos;span&apos;)[0];</div><div class="line">		btn.onclick =function()&#123;</div><div class="line">		var member =[];</div><div class="line">		while(member.length&lt;item)&#123;</div><div class="line">		var a = Math.floor(Math.random()*(endNum-startNum+1) + startNum); //生成的随机数</div><div class="line">		if(member.indexOf(a) == -1)&#123;</div><div class="line">			member.push(a);</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line">	span.innerHTML = member.sort(compare).join(&apos;|&apos;);</div><div class="line">	&#125;</div><div class="line">	&#125;</div><div class="line">	suiJi(10,99,5);</div></pre></td></tr></table></figure></p>
<h4 id="网站性能优化"><a href="#网站性能优化" class="headerlink" title="网站性能优化"></a>网站性能优化</h4><h4 id="数组的合并和删除项"><a href="#数组的合并和删除项" class="headerlink" title="数组的合并和删除项"></a>数组的合并和删除项</h4><h4 id="异步加载和延迟加载"><a href="#异步加载和延迟加载" class="headerlink" title="异步加载和延迟加载"></a>异步加载和延迟加载</h4><h5 id="异步加载方案"><a href="#异步加载方案" class="headerlink" title="异步加载方案"></a>异步加载方案</h5><p>1.动态插入script标签<br>2.通过ajax去获取js代码，然后通过eval()执行<br>3.创建并插入iframe,让它异步执行js</p>
<h5 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h5><p>可视化加载，页面滑动到这里的时候才去加载</p>
<h4 id="webStorage-和cookie-的区别"><a href="#webStorage-和cookie-的区别" class="headerlink" title="webStorage 和cookie 的区别"></a>webStorage 和cookie 的区别</h4><p>cookie是网站为了标示用户身份而储存在用户本地终端上的数据（通常加密），会在服务器和浏览器来回传递<br>sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存<br>存储大小<br>cookie大小不能超过4KB，两外两个不超过5Mb<br>有效时间<br>cookie 设置的cookie 过期时间之前一直有效，即使窗口或者浏览器关闭<br>sessionStorage 存储持久数据，除非主动删除<br>localStorage 窗口或者浏览器关闭自动删除</p>
<h4 id="你对前端工程师的理解和未来期望"><a href="#你对前端工程师的理解和未来期望" class="headerlink" title="你对前端工程师的理解和未来期望"></a>你对前端工程师的理解和未来期望</h4><p>1.针对服务器的优化，拥抱最新前端技术<br>2.做好页面结构、页面重构和用户体验<br>3.参与项目，高质量快效率完成效果图<br>4.与团队成员UI设计沟通</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;blockquote class=&quot;blockquote-center&quot; style=&quot;font-size:1rem;&quot;&gt;“基础知识还是不够扎实啊”&lt;/blockquote&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;最近，面试了一家高大上的公司，很感动，感动地快落泪了。面试完之后最大的感受就是：老子有生之年一定要去这种类似的公司上班，如果现在不够格的话，那就拿起键盘，使劲地给我敲打。面试的过程跟之前的不太一样，先是笔试，给你大约半个小时的时间填写，完了在面试你。&lt;/p&gt;
&lt;p&gt;笔试题，下面我会一一列举出来，找到自己的不足，稳步提升，下次的面试成功的几率就大一点。面试的时候，感觉面试官应该不是技术岗位出身，面试的内容与产品的内容多一点，可惜了，自己答得不是很满意，其中，&lt;strong&gt;面试官问你：你觉得你的优点和缺点是什么&lt;/strong&gt;，这时候我应该在开放一点，当时有点拘谨了，还有&lt;strong&gt;&lt;i&gt;你对未来的发展规划是什么&lt;/i&gt;&lt;/strong&gt;，我回答的很浅显。优点：1.积极进取，乐观向上2.乐于助人3.有很好的三观4.喜欢接受不同的chanllege 5.执行力较强。缺点1.自尊心较强2.有时比较喜欢钻牛角尖，反正类似的问题，自己面试之前要好好想想，不能浅显地回答。还是就是关于薪资的问题，不能说高也不能贬低自己，”每个人的劳动成果应该与所得薪水成正比，现阶段，技术不是很强，所以客观来讲5k差不多，重要的是多学习，多学本领”&lt;code&gt;write less do more&lt;/code&gt;。(后来到了公司才知道，面试官是我的直接上司，公司的副总裁童总)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;面试题&quot;&gt;&lt;a href=&quot;#面试题&quot; class=&quot;headerlink&quot; title=&quot;面试题&quot;&gt;&lt;/a&gt;面试题&lt;/h3&gt;
    
    </summary>
    
      <category term="前端面试题" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="前端面试题" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题（2）：知识点总结</title>
    <link href="http://niaogege.site/2017/02/10/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%882%EF%BC%89%EF%BC%9A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://niaogege.site/2017/02/10/前端面试题（2）：知识点总结/</id>
    <published>2017-02-10T13:49:28.000Z</published>
    <updated>2017-02-10T14:53:44.954Z</updated>
    
    <content type="html"><![CDATA[<p>1.box-sizing属性<br>box-sizing属性主要用来控制元素的盒模型的解析模式。默认值是content-box。<br>content-box：让元素维持W3C的标准盒模型。元素的宽度/高度由border + padding + content的宽度/高度决定，设置width/height属性指的是content部分的宽/高<br>border-box：让元素维持IE传统盒模型（IE6以下版本和IE6~7的怪异模式）。设置width/height属性指的是border + padding + content<br>标准浏览器下，按照W3C规范对盒模型解析，一旦修改了元素的边框或内距，就会影响元素的盒子尺寸，就不得不重新计算元素的盒子尺寸，从而影响整个页面的布局。<br>CSS3中新增了一种盒模型计算方式：box-sizing。盒模型默认的值是content-box, 新增的值是padding-box和border-box，几种盒模型计算元素宽高的区别如下：</p>
<p>2.link 和@import 的区别是?<br>（1）link属于XHTML标签，而@import是CSS提供的;<br>（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;<br>（3）import只在IE5以上才能识别，而link是XHTML标签，无兼容问题;<br>（4）link方式的样式的权重高于@import的权重.<br>example<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=’stylesheet’ href=’a.css’&gt;  或者</div><div class="line">&lt;style&gt;  </div><div class="line">@import url(’a.css’);  </div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>3.CSS3新增伪类举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">　　p:first-of-type 选择属于其父元素的首个 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</div><div class="line">　　p:last-of-type  选择属于其父元素的最后 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</div><div class="line">　　p:only-of-type  选择属于其父元素唯一的 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</div><div class="line">　　p:only-child    选择属于其父元素的唯一子元素的每个 &lt;p&gt; 元素。</div><div class="line">　　p:nth-child(2)  选择属于其父元素的第二个子元素的每个 &lt;p&gt; 元素。</div><div class="line">　　:enabled、:disabled 控制表单控件的禁用状态。</div><div class="line">　　:checked，单选框或复选框被选中。</div></pre></td></tr></table></figure></p>
<p>4.(写)描述一段语义的html代码吧。<br>HTML5中新增加的很多标签（如：<code> article、nav、header和footer就是基于语义化设计原则</code>）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt; div id=&quot;header&quot;&gt; </div><div class="line">	&lt; h1&gt;标题&lt; /h1&gt; </div><div class="line">	&lt; h2&gt;专注Web前端技术&lt; /h2&gt; </div><div class="line">	&lt; /div&gt;</div></pre></td></tr></table></figure></p>
<p>语义 HTML 具有以下特性：<br>文字包裹在元素中，用以反映内容。例如：<br>段落包含在 p 元素中。<br>顺序表包含在ol元素中。<br>从其他来源引用的大型文字块包含在blockquote元素中。<br>HTML 元素不能用作语义用途以外的其他目的。例如：<br>h1包含标题，但并非用于放大文本。<br>blockquote包含大段引述，但并非用于文本缩进。<br>空白段落元素 ( p) 并非用于跳行。<br>文本并不直接包含任何样式信息。例如：<br>不使用 font 或 center 等格式标记。<br>类或 ID 中不引用颜色或位置。</p>
<p>5.对BFC规范的理解？<br> BFC(block formatting context)：块级格式化上下文，它是指一个独立的块级渲染区域，该区域拥有一套渲染规则来约束块级盒子的布局，且与区域外部无关。<br> 既然上文提到BFC是一块渲染区域，那这块渲染区域到底在哪，它又是有多大，这些由生成BFC的元素决定，CSS2.1中规定满足下列CSS声明之一的元素便会生成BFC。<br>+根元素<br>+float的值不为none<br>+overflow的值不为visible<br>+display的值为inline-block、table-cell、table-caption<br>+position的值为absolute或fixed<br>浏览器对于BFC这块区域的约束规则如下：<br>生成BFC元素的子元素会一个接一个的放置。垂直方向上他们的起点是一个包含块的顶部，两个相邻子元素之间的垂直距离取决于元素的margin特性。在BFC中相邻的块级元素外边距会折叠。<br>生成BFC元素的子元素中，每一个子元素做外边距与包含块的左边界相接触，（对于从右到左的格式化，右外边距接触右边界），即使浮动元素也是如此（尽管子元素的内容区域会由于浮动而压缩），除非这个子元素也创建了一个新的BFC（如它自身也是一个浮动元素）。<br>　　有道友对它做了分解，我们直接拿来：</p>
<p>1.内部的Box会在垂直方向上一个接一个的放置<br>2.垂直方向上的距离由margin决定。（完整的说法是：属于同一个BFC的两个相邻Box的margin会发生重叠，与方向无关。）<br>3.每个元素的左外边距与包含块的左边界相接触（从左向右），即使浮动元素也是如此。（这说明BFC中子元素不会超出他的包含块，而position为absolute的元素可以超出他的包含块边界）<br>4.BFC的区域不会与float的元素区域重叠<br>5.计算BFC的高度时，浮动子元素也参与计算<br>6.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面元素，反之亦然</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.box-sizing属性&lt;br&gt;box-sizing属性主要用来控制元素的盒模型的解析模式。默认值是content-box。&lt;br&gt;content-box：让元素维持W3C的标准盒模型。元素的宽度/高度由border + padding + content的宽度/高度决定，设置width/height属性指的是content部分的宽/高&lt;br&gt;border-box：让元素维持IE传统盒模型（IE6以下版本和IE6~7的怪异模式）。设置width/height属性指的是border + padding + content&lt;br&gt;标准浏览器下，按照W3C规范对盒模型解析，一旦修改了元素的边框或内距，就会影响元素的盒子尺寸，就不得不重新计算元素的盒子尺寸，从而影响整个页面的布局。&lt;br&gt;CSS3中新增了一种盒模型计算方式：box-sizing。盒模型默认的值是content-box, 新增的值是padding-box和border-box，几种盒模型计算元素宽高的区别如下：&lt;/p&gt;
&lt;p&gt;2.link 和@import 的区别是?&lt;br&gt;（1）link属于XHTML标签，而@import是CSS提供的;&lt;br&gt;（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;&lt;br&gt;（3）import只在IE5以上才能识别，而link是XHTML标签，无兼容问题;&lt;br&gt;（4）link方式的样式的权重高于@import的权重.&lt;br&gt;example&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;link rel=’stylesheet’ href=’a.css’&amp;gt;  或者&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@import url(’a.css’);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端面试题" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="前端面试题" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题（1）：知识点总结</title>
    <link href="http://niaogege.site/2017/02/09/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%881%EF%BC%89%EF%BC%9A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://niaogege.site/2017/02/09/前端面试题（1）：知识点总结/</id>
    <published>2017-02-09T15:00:22.000Z</published>
    <updated>2017-02-10T14:11:46.926Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>div在容器中左右上下居中的代码<br>div上下左右居中第一种<br>.box{width:500px;height:500px;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);background:red;}<br>div上下左右居中第二种<br>.wrapper{width:100vw;height:100vh;background:hsl(0,80%,90%);font-size:16px;}<br>.box{width:20rem;height:20rem;background:red;position:absolute;top:0;left:0;margin:auto;bottom:0;right:0;font-size:1.4rem;}<br>div上下左右居中第三种<br>.wrapper{width:100vw;height:100vh;background:hsl(0,80%,90%);font-size:16px;}<br>.box{width:30rem;height:30rem;background:red;position:absolute;left:50%;top:50%;margin-left:-15rem;margin-top:-15rem;}<a id="more"></a></li>
<li>线程与进程的区别</li>
</ul>
<p>一个程序至少有一个进程,一个进程至少有一个线程。<br>线程的划分尺度小于进程，使得多线程程序的并发性高。<br>另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。<br>线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。<br>从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。<br>但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</p>
<ul>
<li>你如何对网站的文件和资源进行优化？</li>
</ul>
<p>期待的解决方案包括：<br>文件合并<br>文件最小化/文件压缩<br>使用 CDN 托管<br>缓存的使用（多个域名来提供缓存）<br>其他<br>请说出三种减少页面加载时间的方法。<br>1.优化图片<br>2.图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方）<br>3.优化CSS（压缩合并css，如margin-top,margin-left…)<br>4.网址后加斜杠（如www.campr.com/目录，会判断这个“目录是什么文件类型，或者是目录。）<br>5.标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。<br>当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了。）<br>6.减少http请求（合并文件，合并图片）。</p>
<hr>
<p>你都使用哪些工具来测试代码的性能？<br>7ofiler, JSPerf（<a href="http://jsperf.com/nexttick-vs-setzerotimeout-vs-settimeout）" target="_blank" rel="external">http://jsperf.com/nexttick-vs-setzerotimeout-vs-settimeout）</a>, Dromaeo<br>什么是 FOUC（无样式内容闪烁）？你如何来避免 FOUC？<br>FOUC - Flash Of Unstyled Content 文档样式闪烁<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span> media=<span class="string">"all"</span>&gt;@import <span class="string">"../fouc.css"</span>;&lt;/style&gt; &lt;/code&gt;</div></pre></td></tr></table></figure></p>
<p>而引用CSS文件的@import就是造成这个问题的罪魁祸首。IE会先加载整个HTML文档的DOM，然后再去导入外部的CSS文件，因此，在页面DOM加载完成到CSS导入完成中间会有一段时间页面上的内容是没有样式的，这段时间的长短跟网速，电脑速度都有关系。<br>解决方法简单的出奇，只要在<code><head></head></code>之间加入一个link或者script元素就可以了。</p>
<p>null和undefined的区别？</p>
<p>null是一个表示”无”的对象，转为数值时为0；undefined是一个表示”无”的原始值，转为数值时为NaN。</p>
<p>当声明的变量还未被初始化时，变量的默认值为undefined。 null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</p>
<p>undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：</p>
<p>（1）变量被声明了，但没有赋值时，就等于undefined。</p>
<p>（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。</p>
<p>（3）对象没有赋值的属性，该属性的值为undefined。</p>
<p>（4）函数没有返回值时，默认返回undefined。<br>null表示”没有对象”，即该处不应该有值。典型用法是：</p>
<p>（1） 作为函数的参数，表示该函数的参数不是对象。</p>
<p>（2） 作为对象原型链的终点。</p>
<ul>
<li><p>new操作符具体干了什么呢?<br> 1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。<br> 2、属性和方法被加入到 this 引用的对象中。<br> 3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。<br>var obj  = {};<br>obj.<strong>proto</strong> = Base.prototype;<br>Base.call(obj); </p>
</li>
<li><p>js延迟加载的方式有哪些？</p>
</li>
<li><p>defer和async、动态创建DOM方式（创建script，插入到DOM中，加载完毕后callBack）、按需异步载入js<br>如何解决跨域问题?</p>
</li>
</ul>
<p>jsonp、 document.domain+iframe、window.name、window.postMessage、服务器上设置代理页面</p>
<p>jsonp的原理是动态插入script标签<br>具体参见：详解js跨域问题（<a href="https://segmentfault.com/a/1190000000718840）" target="_blank" rel="external">https://segmentfault.com/a/1190000000718840）</a></p>
<ul>
<li>documen.write和 innerHTML的区别</li>
</ul>
<p>document.write只能重绘整个页面</p>
<p>innerHTML可以重绘页面的一部分</p>
<ul>
<li>.call() 和 .apply() 的区别和作用？</li>
</ul>
<p>作用：动态改变某个类的某个方法的运行环境。 区别参见：JavaScript学习总结（四）function函数部分（<a href="https://segmentfault.com/a/1190000000660786#articleHeader15）" target="_blank" rel="external">https://segmentfault.com/a/1190000000660786#articleHeader15）</a></p>
<hr>
<ul>
<li>哪些操作会造成内存泄漏？</li>
</ul>
<p>内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。<br>垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。</p>
<p>setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。<br>闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）<br>详见：详解js变量、作用域及内存（<a href="https://segmentfault.com/a/1190000000687844）" target="_blank" rel="external">https://segmentfault.com/a/1190000000687844）</a></p>
<ul>
<li>JavaScript中的作用域与变量声明提升？</li>
</ul>
<p>详见：详解JavaScript函数模式（<a href="https://segmentfault.com/a/1190000000758184#articleHeader5）" target="_blank" rel="external">https://segmentfault.com/a/1190000000758184#articleHeader5）</a></p>
<ul>
<li><p>如何判断当前脚本运行在浏览器还是node环境中？</p>
</li>
<li><p>通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中<br>其他问题？</p>
</li>
<li><p>你遇到过比较难的技术问题是？你是如何解决的？</p>
</li>
<li><p>列举IE 与其他浏览器不一样的特性？</p>
</li>
<li><p>什么叫优雅降级和渐进增强？</p>
</li>
</ul>
<p>优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会检查以确认它们是否能正常工作。由于IE独特的盒模型布局问题，针对不同版本的IE的hack实践过优雅降级了,为那些无法支持功能的浏览器增加候选方案，使之在旧式浏览器上以某种形式降级体验却不至于完全失效.</p>
<p>渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新式浏览器才支持的功能,向页面增加无害于基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。<br>详见：css学习归纳总结（一）</p>
<ul>
<li>WEB应用从服务器主动推送Data到客户端有那些方式？</li>
</ul>
<p>Javascript数据推送<br>Commet：基于HTTP长连接的服务器推送技术</p>
<p>基于WebSocket的推送方案</p>
<p>SSE（Server-Send Event）：服务器推送数据新方式</p>
<ul>
<li>对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？</li>
</ul>
<p>前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。<br>    1、实现界面交互<br>    2、提升用户体验<br>    3、有了Node.js，前端可以实现服务端的一些事情</p>
<p>前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，</p>
<p>参与项目，快速高质量完成实现效果图，精确到1px；</p>
<p>与团队成员，UI设计，产品经理的沟通；</p>
<p>做好的页面结构，页面重构和用户体验；</p>
<p>处理hack，兼容、写出优美的代码格式；</p>
<p>针对服务器的优化、拥抱最新前端技术。</p>
<ul>
<li>你有哪些性能优化的方法？</li>
</ul>
<p>（详情请看雅虎14条性能优化原则）（<a href="https://segmentfault.com/blog/trigkit4/1190000000656717）。" target="_blank" rel="external">https://segmentfault.com/blog/trigkit4/1190000000656717）。</a></p>
<p>  （1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。</p>
<p>  （2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数</p>
<p>  （3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。</p>
<p>  （4） 当需要设置的样式很多时设置className而不是直接操作style。</p>
<p>  （5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。</p>
<p>  （6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。</p>
<p>  （7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。<br>详情：<a href="http://segmentfault.com/blog/trigkit4/1190000000691919" target="_blank" rel="external">http://segmentfault.com/blog/trigkit4/1190000000691919</a></p>
<ul>
<li>一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？</li>
</ul>
<p>分为4个步骤：<br>   （1），当发送一个URL请求时，不管这个URL是Web页面的URL还是Web页面上每个资源的URL，浏览器都会开启一个线程来处理这个请求，同时在远程DNS服务器上启动一个DNS查询。这能使浏览器获得请求对应的IP地址。<br>   （2）， 浏览器与远程Web服务器通过TCP三次握手协商来建立一个TCP/IP连接。该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由客户端发出该请求已经被接受的报文。<br>   （3），一旦TCP/IP连接建立，浏览器会通过该连接向远程服务器发送HTTP的GET请求。远程服务器找到资源并使用HTTP响应返回该资源，值为200的HTTP响应状态表示一个正确的响应。<br>   （4），此时，Web服务器提供资源服务，客户端开始下载资源。</p>
<p>请求返回后，便进入了我们关注的前端模块<br>简单来说，浏览器会解析HTML生成DOM Tree，其次会根据CSS生成CSS Rule Tree，而javascript又可以根据DOM API操作DOM<br>详情：从输入 URL 到浏览器接收的过程中发生了什么事情？（<a href="https://segmentfault.com/a/1190000000697254）" target="_blank" rel="external">https://segmentfault.com/a/1190000000697254）</a></p>
<ul>
<li>平时如何管理你的项目？</li>
</ul>
<p>先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；</p>
<p>编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；</p>
<p>标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；</p>
<p>页面进行标注（例如 页面 模块 开始和结束）；</p>
<p>CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；<br>JS 分文件夹存放 命名以该JS功能为准的英文翻译。</p>
<p>图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理 </p>
<ul>
<li>说说最近最流行的一些东西吧？常去哪些网站？</li>
</ul>
<p>Node.js、Mongodb、npm、MVVM、MEAN、three.js,React 。<br>网站：w3cfuns,sf,hacknews,CSDN,慕课，博客园，InfoQ,w3cplus等</p>
<ul>
<li>javascript对象的几种创建方式</li>
</ul>
<p>1，工厂模式<br>2，构造函数模式<br>3，原型模式<br>4，混合构造函数和原型模式<br>5，动态原型模式<br>6，寄生构造函数模式<br>7，稳妥构造函数模式<br>javascript继承的6种方法</p>
<p>1，原型链继承<br>2，借用构造函数继承<br>3，组合继承(原型+借用构造)<br>4，原型式继承<br>5，寄生式继承<br>6，寄生组合式继承<br>详情：JavaScript继承方式详解（<a href="https://segmentfault.com/a/1190000002440502）" target="_blank" rel="external">https://segmentfault.com/a/1190000002440502）</a></p>
<ul>
<li>ajax过程</li>
</ul>
<p>(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象.</p>
<p>(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息.</p>
<p>(3)设置响应HTTP请求状态变化的函数.</p>
<p>(4)发送HTTP请求.</p>
<p>(5)获取异步调用返回的数据.</p>
<p>(6)使用JavaScript和DOM实现局部刷新.<br>详情：JavaScript学习总结（七）Ajax和Http状态字（<a href="https://segmentfault.com/a/1190000000691919）" target="_blank" rel="external">https://segmentfault.com/a/1190000000691919）</a></p>
<ul>
<li>异步加载和延迟加载</li>
</ul>
<p>1.异步加载的方案： 动态插入script标签<br>2.通过ajax去获取js代码，然后通过eval执行<br>3.script标签上添加defer或者async属性<br>4.创建并插入iframe，让它异步执行js<br>5.延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的。</p>
<ul>
<li>前端安全问题？</li>
</ul>
<p>sql注入原理</p>
<p>就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。</p>
<p>总的来说有以下几点：</p>
<p>1.永远不要信任用户的输入，要对用户的输入进行校验，可以通过正则表达式，或限制长度，对单引号和双”-“进行转换等。<br>2.永远不要使用动态拼装SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取。<br>3.永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。<br>4.不要把机密信息明文存放，请加密或者hash掉密码和敏感的信息。<br>XSS原理及防范</p>
<p>Xss(cross-site scripting)攻击指的是攻击者往Web页面里插入恶意html标签或者javascript代码。比如：攻击者在论坛中放一个 看似安全的链接，骗取用户点击后，窃取cookie中的用户私密信息；或者攻击者在论坛中加一个恶意表单， 当用户提交表单的时候，却把信息传送到攻击者的服务器中，而不是用户原本以为的信任站点。</p>
<p>XSS防范方法</p>
<p>1.代码里对用户输入的地方和变量都需要仔细检查长度和对”&lt;”,”&gt;”,”;”,”’”等字符做过滤；其次任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。这一个层面做好，至少可以堵住超过一半的XSS 攻击。<br>2.避免直接在cookie 中泄露用户隐私，例如email、密码等等。 3.通过使cookie 和系统ip 绑定来降低cookie 泄露后的危险。这样攻击者得到的cookie 没有实际价值，不可能拿来重放。<br>4.尽量采用POST 而非GET 提交表单</p>
<p>XSS与CSRF有什么区别吗？</p>
<p>XSS是获取信息，不需要提前知道其他用户页面的代码和数据包。CSRF是代替用户完成指定的动作，需要知道其他用户页面的代码和数据包。</p>
<p>要完成一次CSRF攻击，受害者必须依次完成两个步骤：</p>
<p>登录受信任网站A，并在本地生成Cookie。 　　</p>
<p>在不登出A的情况下，访问危险网站B。</p>
<p>CSRF的防御</p>
<p>服务端的CSRF方式方法很多样，但总的思想都是一致的，就是在客户端页面增加伪随机数。 </p>
<p>使用验证码</p>
<p>ie各版本和chrome可以并行下载多少个资源</p>
<p>IE6 两个并发，iE7升级之后的6个并发，之后版本也是6个</p>
<p>Firefox，chrome也是6个</p>
<ul>
<li>javascript里面的继承怎么实现，如何避免原型链上面的对象共享</li>
</ul>
<p>用构造函数和原型链的混合模式去实现继承，避免对象共享可以参考经典的extend()函数，很多前端框架都有封装的，就是用一个空函数当做中间变量<br>grunt， YUI compressor 和 google clojure用来进行代码压缩的用法。</p>
<p>YUI Compressor 是一个用来压缩 JS 和 CSS 文件的工具，采用Java开发。</p>
<p>使用方法：</p>
<p>//压缩JS<br>java -jar yuicompressor-2.4.2.jar –type js –charset utf-8 -v src.js &gt; packed.js<br>//压缩CSS<br>java -jar yuicompressor-2.4.2.jar –type css –charset utf-8 -v src.css &gt; packed.css<br>详情请见：你需要掌握的前端代码性能优化工具（<a href="https://segmentfault.com/a/1190000002585760）" target="_blank" rel="external">https://segmentfault.com/a/1190000002585760）</a></p>
<p>Flash、Ajax各自的优缺点，在使用中如何取舍？</p>
<p>1、Flash ajax对比<br>Flash适合处理多媒体、矢量图形、访问机器；对CSS、处理文本上不足，不容易被搜索。<br>Ajax对CSS、文本支持很好，支持搜索；多媒体、矢量图形、机器访问不足。<br>共同点：与服务器的无刷新传递消息、用户离线和在线状态、操作DOM<br>请解释一下 JavaScript 的同源策略。</p>
<p>概念:同源策略是客户端脚本（尤其是Javascript）的重要的安全度量标准。它最早出自Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。</p>
<p>这里的同源策略指的是：协议，域名，端口相同，同源策略是一种安全协议。 指一段脚本只能读取来自同一来源的窗口和文档的属性。</p>
<p>为什么要有同源限制？</p>
<p>我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。</p>
<p>什么是 “use strict”; ? 使用它的好处和坏处分别是什么？</p>
<p>ECMAscript 5添加了第二种运行模式：”严格模式”（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。</p>
<p>设立”严格模式”的目的，主要有以下几个：</p>
<ul>
<li>消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;</li>
<li>消除代码运行的一些不安全之处，保证代码运行的安全；</li>
<li>提高编译器效率，增加运行速度；</li>
<li>为未来新版本的Javascript做好铺垫。<br>注：经过测试IE6,7,8,9均不支持严格模式。</li>
</ul>
<p>缺点： 现在网站的JS 都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节。</p>
<p>GET和POST的区别，何时使用POST？</p>
<p>GET：一般用于信息获取，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符<br>POST：一般用于修改服务器上的资源，对所发送的信息没有限制。</p>
<p>GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值，<br>也就是说Get是通过地址栏来传值，而Post是通过提交表单来传值。</p>
<p>然而，在以下情况中，请使用 POST 请求：<br>无法使用缓存文件（更新服务器上的文件或数据库）<br>向服务器发送大量数据（POST 没有数据量限制）<br>发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠<br>哪些地方会出现css阻塞，哪些地方会出现js阻塞？</p>
<p>js的阻塞特性：所有浏览器在下载JS的时候，会阻止一切其他活动，比如其他资源的下载，内容的呈现等等。直到JS下载、解析、执行完毕后才开始继续并行下载其他资源并呈现内容。为了提高用户体验，新一代浏览器都支持并行下载JS，但是JS下载仍然会阻塞其它资源的下载（例如.图片，css文件等）。</p>
<p>由于浏览器为了防止出现JS修改DOM树，需要重新构建DOM树的情况，所以就会阻塞其他的下载和呈现。</p>
<p>嵌入JS会阻塞所有内容的呈现，而外部JS只会阻塞其后内容的显示，2种方式都会阻塞其后资源的下载。也就是说外部样式不会阻塞外部脚本的加载，但会阻塞外部脚本的执行。</p>
<p>CSS怎么会阻塞加载了？CSS本来是可以并行下载的，在什么情况下会出现阻塞加载了(在测试观察中，IE6下CSS都是阻塞加载）</p>
<p>当CSS后面跟着嵌入的JS的时候，该CSS就会出现阻塞后面资源下载的情况。而当把嵌入JS放到CSS前面，就不会出现阻塞的情况了。</p>
<p>根本原因：因为浏览器会维持html中css和js的顺序，样式表必须在嵌入的JS执行前先加载、解析完。而嵌入的JS会阻塞后面的资源加载，所以就会出现上面CSS阻塞下载的情况。</p>
<ul>
<li><p>嵌入JS应该放在什么位置？</p>
<p> 1、放在底部，虽然放在底部照样会阻塞所有呈现，但不会阻塞资源下载。</p>
<p> 2、如果嵌入JS放在head中，请把嵌入JS放在CSS头部。</p>
<p> 3、使用defer（只支持IE）</p>
<p> 4、不要在嵌入的JS中调用运行时间较长的函数，如果一定要用，可以用<code>setTimeout</code>来调用<br>Javascript无阻塞加载具体方式</p>
</li>
</ul>
<p>将脚本放在底部。<link>还是放在head中，用以保证在js加载前，能加载出正常显示的页面。<script>标签放在</body>前。<br>成组脚本：由于每个<script>标签下载时阻塞页面解析过程，所以限制页面的<script>总数也可以改善性能。适用于内联脚本和外部脚本。</p>
<p>非阻塞脚本：等页面完成加载后，再加载js代码。也就是，在window.onload事件发出后开始下载代码。 （1）defer属性：支持IE4和fierfox3.5更高版本浏览器 （2）动态脚本元素：文档对象模型（DOM）允许你使用js动态创建HTML的几乎全部文档内容。代码如下：</p>
<p><script><br>var script=document.createElement(“script”);<br>script.type=”text/javascript”;<br>script.src=”file.js”;<br>document.getElementsByTagName(“head”)[0].appendChild(script);<br></script><br>此技术的重点在于：无论在何处启动下载，文件额下载和运行都不会阻塞其他页面处理过程。即使在head里（除了用于下载文件的http链接）。</p>
<p>闭包相关问题？</p>
<p>详情请见：详解js闭包（<a href="https://segmentfault.com/a/1190000000652891）" target="_blank" rel="external">https://segmentfault.com/a/1190000000652891）</a></p>
<p>js事件处理程序问题？</p>
<p>详情请见：JavaScript学习总结（九）事件详解（<a href="https://segmentfault.com/a/1190000002174034）" target="_blank" rel="external">https://segmentfault.com/a/1190000002174034）</a></p>
<p>eval是做什么的？</p>
<p>它的功能是把对应的字符串解析成JS代码并运行；<br>应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。<br>JavaScript原型，原型链 ? 有什么特点？</p>
<ul>
<li>原型对象也是普通的对象，是对象一个自带隐式的 <strong>proto</strong> 属性，原型也有可能有自己的原型，如果一个原型对象的原型不为null的话，我们就称之为原型链。</li>
<li>原型链是由一些用来继承和共享属性的对象组成的（有限的）对象链。<br>事件、IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</li>
</ul>
<ol>
<li>我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。  </li>
<li>事件处理机制：IE是事件冒泡、firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件。；</li>
<li>ev.stopPropagation();注意旧ie的方法 ev.cancelBubble = true;<br>ajax 是什么?ajax 的交互模型?同步和异步的区别?如何解决跨域问题?</li>
</ol>
<p>详情请见：JavaScript学习总结（七）Ajax和Http状态字（<a href="https://segmentfault.com/a/1190000000691919）" target="_blank" rel="external">https://segmentfault.com/a/1190000000691919）</a></p>
<ol>
<li><p>通过异步模式，提升了用户体验</p>
</li>
<li><p>优化了浏览器和服务器之间的传输，减少不必要的数据往返，减少了带宽占用</p>
</li>
<li><p>Ajax在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载。</p>
</li>
<li><p>Ajax的最大的特点是什么。</p>
<p>Ajax可以实现动态不刷新（局部刷新）<br>readyState属性 状态 有5个可取值： 0=未初始化 ，1=启动 2=发送，3=接收，4=完成</p>
</li>
</ol>
<p>ajax的缺点</p>
<p>  1、ajax不支持浏览器back按钮。</p>
<p>  2、安全问题 AJAX暴露了与服务器交互的细节。</p>
<p>  3、对搜索引擎的支持比较弱。</p>
<p>  4、破坏了程序的异常机制。</p>
<p>  5、不容易调试。</p>
<p>跨域： jsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面<br>js对象的深度克隆</p>
<p>  function clone(Obj) {<br>        var buf;<br>        if (Obj instanceof Array) {<br>            buf = [];  //创建一个空的数组<br>            var i = Obj.length;<br>            while (i–) {<br>                buf[i] = clone(Obj[i]);<br>            }<br>            return buf;<br>        }else if (Obj instanceof Object){<br>            buf = {};  //创建一个空对象<br>            for (var k in Obj) {  //为这个对象添加新的属性<br>                buf[k] = clone(Obj[k]);<br>            }<br>            return buf;<br>        }else{<br>            return Obj;<br>        }<br>    }<br>AMD和CMD 规范的区别？</p>
<p>详情请见：详解JavaScript模块化开发（<a href="https://segmentfault.com/a/1190000000733959）" target="_blank" rel="external">https://segmentfault.com/a/1190000000733959）</a></p>
<p>网站重构的理解？</p>
<p>网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。</p>
<p>对于传统的网站来说重构通常是：</p>
<p>表格(table)布局改为DIV+CSS<br>使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)<br>对于移动平台的优化<br>针对于SEO进行优化<br>深层次的网站重构应该考虑的方面</p>
<p>减少代码间的耦合<br>让代码保持弹性<br>严格按规范编写代码<br>设计可扩展的API<br>代替旧有的框架、语言(如VB)<br>增强用户体验<br>通常来说对于速度的优化也包含在重构中</p>
<p>压缩JS、CSS、image等前端资源(通常是由服务器来解决)<br>程序的性能优化(如数据读写)<br>采用CDN来加速资源加载<br>对于JS DOM的优化<br>HTTP服务器的文件缓存<br>如何获取UA？</p>
<p><script><br>    function whatBrowser() {<br>        document.Browser.Name.value=navigator.appName;<br>        document.Browser.Version.value=navigator.appVersion;<br>        document.Browser.Code.value=navigator.appCodeName;<br>        document.Browser.Agent.value=navigator.userAgent;<br>    }<br></script><br>js数组去重</p>
<p>以下是数组去重的三种方法：</p>
<p>Array.prototype.unique1 = function () {<br>  var n = []; //一个新的临时数组<br>  for (var i = 0; i &lt; this.length; i++) //遍历当前数组<br>  {<br>    //如果当前数组的第i已经保存进了临时数组，那么跳过，<br>    //否则把当前项push到临时数组里面<br>    if (n.indexOf(this[i]) == -1) n.push(this[i]);<br>  }<br>  return n;<br>}</p>
<p>Array.prototype.unique2 = function()<br>{<br>    var n = {},r=[]; //n为hash表，r为临时数组<br>    for(var i = 0; i &lt; this.length; i++) //遍历当前数组<br>    {<br>        if (!n[this[i]]) //如果hash表中没有当前项<br>        {<br>            n[this[i]] = true; //存入hash表<br>            r.push(this[i]); //把当前数组的当前项push到临时数组里面<br>        }<br>    }<br>    return r;<br>}</p>
<p>Array.prototype.unique3 = function()<br>{<br>    var n = [this[0]]; //结果数组<br>    for(var i = 1; i &lt; this.length; i++) //从第二项开始遍历<br>    {<br>        //如果当前数组的第i项在当前数组中第一次出现的位置不是i，<br>        //那么表示第i项是重复的，忽略掉。否则存入结果数组<br>        if (this.indexOf(this[i]) == i) n.push(this[i]);<br>    }<br>    return n;<br>}<br>HTTP状态码</p>
<p>100  Continue  继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息<br>200  OK   正常返回信息<br>201  Created  请求成功并且服务器创建了新的资源<br>202  Accepted  服务器已接受请求，但尚未处理<br>301  Moved Permanently  请求的网页已永久移动到新位置。<br>302 Found  临时性重定向。<br>303 See Other  临时性重定向，且总是使用 GET 请求新的 URI。<br>304  Not Modified  自从上次请求后，请求的网页未修改过。</p>
<p>400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。<br>401 Unauthorized  请求未授权。<br>403 Forbidden  禁止访问。<br>404 Not Found  找不到如何与 URI 相匹配的资源。</p>
<p>500 Internal Server Error  最常见的服务器端错误。<br>503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。<br>js操作获取和设置cookie</p>
<p>//创建cookie<br>function setCookie(name, value, expires, path, domain, secure) {<br>    var cookieText = encodeURIComponent(name) + ‘=’ + encodeURIComponent(value);<br>    if (expires instanceof Date) {<br>        cookieText += ‘; expires=’ + expires;<br>    }<br>    if (path) {<br>        cookieText += ‘; expires=’ + expires;<br>    }<br>    if (domain) {<br>        cookieText += ‘; domain=’ + domain;<br>    }<br>    if (secure) {<br>        cookieText += ‘; secure’;<br>    }<br>    document.cookie = cookieText;<br>}</p>
<p>//获取cookie<br>function getCookie(name) {<br>    var cookieName = encodeURIComponent(name) + ‘=’;<br>    var cookieStart = document.cookie.indexOf(cookieName);<br>    var cookieValue = null;<br>    if (cookieStart &gt; -1) {<br>        var cookieEnd = document.cookie.indexOf(‘;’, cookieStart);<br>        if (cookieEnd == -1) {<br>            cookieEnd = document.cookie.length;<br>        }<br>        cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd));<br>    }<br>    return cookieValue;<br>}</p>
<p>//删除cookie<br>function unsetCookie(name) {<br>    document.cookie = name + “= ; expires=” + new Date(0);<br>}<br>说说TCP传输的三次握手策略</p>
<p>为了准确无误地把数据送达目标处，TCP协议采用了三次握手策略。用TCP协议把数据包送出去后，TCP不会对传送  后的情况置之不理，它一定会向对方确认是否成功送达。握手过程中使用了TCP的标志：SYN和ACK。<br>发送端首先发送一个带SYN标志的数据包给对方。接收端收到后，回传一个带有SYN/ACK标志的数据包以示传达确认信息。最后，发送端再回传一个带ACK标志的数据包，代表“握手”结束<br>若在握手过程中某个阶段莫名中断，TCP协议会再次以相同的顺序发送相同的数据包。<br>说说你对Promise的理解</p>
<p>依照 Promise/A+ 的定义，Promise 有四种状态：</p>
<p>pending: 初始状态, 非 fulfilled 或 rejected.<br>fulfilled: 成功的操作.<br>rejected: 失败的操作.<br>settled: Promise已被fulfilled或rejected，且不是pending<br>另外， fulfilled 与 rejected 一起合称 settled。</p>
<p>Promise 对象用来进行延迟(deferred) 和异步(asynchronous ) 计算。</p>
<p>Promise 的构造函数<br>构造一个 Promise，最基本的用法如下：</p>
<p>var promise = new Promise(function(resolve, reject) {<br>    if (…) {  // succeed<br>        resolve(result);<br>    } else {   // fails<br>        reject(Error(errMessage));<br>    }<br>});<br>Promise 实例拥有 then 方法（具有 then 方法的对象，通常被称为 thenable）。它的使用方法如下：</p>
<p>promise.then(onFulfilled, onRejected)<br>接收两个函数作为参数，一个在 fulfilled 的时候被调用，一个在 rejected 的时候被调用，接收参数就是 future，onFulfilled 对应 resolve, onRejected 对应 reject。</p>
<p>Javascript垃圾回收方法</p>
<p>标记清除（mark and sweep）</p>
<p>这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为“进入环境”，当变量离开环境的时候（函数执行结束）将其标记为“离开环境”。</p>
<p>垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了</p>
<p>引用计数(reference counting)</p>
<p>在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间。</p>
<p>在IE中虽然JavaScript对象通过标记清除的方式进行垃圾回收，但BOM与DOM对象却是通过引用计数回收垃圾的，也就是说只要涉及BOM及DOM就会出现循环引用问题。</p>
<p>谈谈性能优化问题</p>
<p>代码层面：避免使用css表达式，避免使用高级选择器，通配选择器。 缓存利用：缓存Ajax，使用CDN，使用外部js和css文件以便缓存，添加Expires头，服务端配置Etag，减少DNS查找等 请求数量：合并样式和脚本，使用css图片精灵，初始首屏之外的图片资源按需加载，静态资源延迟加载。 请求带宽：压缩文件，开启GZIP，</p>
<p>移动端性能优化</p>
<p>尽量使用css3动画，开启硬件加速。适当使用touch事件代替click事件。避免使用css3渐变阴影效果。 尽可能少的使用box-shadow与gradients。box-shadow与gradients往往都是页面的性能杀手<br>什么是Etag？</p>
<p>浏览器下载组件的时候，会将它们存储到浏览器缓存中。如果需要再次获取相同的组件，浏览器将检查组件的缓存时间， 假如已经过期，那么浏览器将发送一个条件GET请求到服务器，服务器判断缓存还有效，则发送一个304响应， 告诉浏览器可以重用缓存组件。</p>
<p>那么服务器是根据什么判断缓存是否还有效呢?答案有两种方式，一种是前面提到的ETag，另一种是根据Last-Modified</p>
<p>Expires和Cache-Control</p>
<p>Expires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。</p>
<p>Cache-Control: no-cache, private, max-age=0<br>ETag: abcde<br>Expires: Thu, 15 Apr 2014 20:00:00 GMT<br>Pragma: private<br>Last-Modified: $now // RFC1123 format<br>栈和队列的区别?</p>
<p>栈的插入和删除操作都是在一端进行的，而队列的操作却是在两端进行的。<br>队列先进先出，栈先进后出。<br>栈只允许在表尾一端进行插入和删除，而队列只允许在表尾一端进行插入，在表头一端进行删除<br>栈和堆的区别？</p>
<p>栈区（stack）—   由编译器自动分配释放   ，存放函数的参数值，局部变量的值等。<br>堆区（heap）   —   一般由程序员分配释放，   若程序员不释放，程序结束时可能由OS回收。<br>堆（数据结构）：堆可以被看成是一棵树，如：堆排序；<br>栈（数据结构）：一种先进后出的数据结构。<br>关于Http 2.0 你知道多少？</p>
<p>HTTP/2引入了“服务端推（serverpush）”的概念，它允许服务端在客户端需要数据之前就主动地将数据发送到客户端缓存中，从而提高性能。 HTTP/2提供更多的加密支持 HTTP/2使用多路技术，允许多个消息在一个连接上同时交差。 它增加了头压缩（header compression），因此即使非常小的请求，其请求和响应的header都只会占用很小比例的带宽。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;div在容器中左右上下居中的代码&lt;br&gt;div上下左右居中第一种&lt;br&gt;.box{width:500px;height:500px;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);background:red;}&lt;br&gt;div上下左右居中第二种&lt;br&gt;.wrapper{width:100vw;height:100vh;background:hsl(0,80%,90%);font-size:16px;}&lt;br&gt;.box{width:20rem;height:20rem;background:red;position:absolute;top:0;left:0;margin:auto;bottom:0;right:0;font-size:1.4rem;}&lt;br&gt;div上下左右居中第三种&lt;br&gt;.wrapper{width:100vw;height:100vh;background:hsl(0,80%,90%);font-size:16px;}&lt;br&gt;.box{width:30rem;height:30rem;background:red;position:absolute;left:50%;top:50%;margin-left:-15rem;margin-top:-15rem;}
    
    </summary>
    
      <category term="前端面试题" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="前端面试题" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>前端：Accordion手风琴效果</title>
    <link href="http://niaogege.site/2017/02/09/%E5%89%8D%E7%AB%AF%EF%BC%9Aaccordion%E6%89%8B%E9%A3%8E%E7%90%B4%E6%95%88%E6%9E%9C/"/>
    <id>http://niaogege.site/2017/02/09/前端：accordion手风琴效果/</id>
    <published>2017-02-09T14:50:59.000Z</published>
    <updated>2017-02-18T09:40:11.645Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojjsl7zpc.bkt.clouddn.com/accordion.gif?e=1487414162&token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:eGY9hJOhUgXAFQoEigCtDsTI77M" alt="开到荼蘼"></p>
<h4 id="knowledge-浮动布局"><a href="#knowledge-浮动布局" class="headerlink" title="knowledge:浮动布局"></a>knowledge:浮动布局</h4><p><code>.wrapper li{width:240px;height:225px;overflow:hidden;float:left;}</code><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;li class=<span class="string">"big"</span>&gt;&lt;a href=<span class="string">"#"</span>&gt;</div><div class="line">				&lt;img src=<span class="string">"img/demo.jpg"</span>&gt;</div><div class="line">				&lt;div class=<span class="string">"info"</span>&gt;</div><div class="line">					&lt;h3 style=<span class="string">"color:#f62368"</span>&gt;聚美妆&lt;/h3&gt;</div><div class="line">					&lt;p&gt;聚美妆1/2周年庆&lt;/p&gt;</div><div class="line">					&lt;p class=<span class="string">"price"</span>&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;i&gt;折起&lt;/i&gt;&lt;/p&gt;	</div><div class="line">				&lt;/div&gt;</div><div class="line">				&lt;i class=<span class="string">"line"</span>&gt;&lt;/i&gt;</div><div class="line">				&lt;i class=<span class="string">"mask"</span>&gt;&lt;/i&gt;</div><div class="line">			&lt;/a&gt;</div><div class="line">			&lt;/li&gt;</div></pre></td></tr></table></figure></p>
<h4 id="knowledge-遮罩层"><a href="#knowledge-遮罩层" class="headerlink" title="knowledge:遮罩层"></a>knowledge:遮罩层</h4><p><code>.wrapper .mask{position:absolute;top:0;height:225px;width:400px;opacity:0;background:#000;}<br>.wrapper:hover .mask{opacity:0.15;}<br></code></p>
<h4 id="绝对定位position-absolute"><a href="#绝对定位position-absolute" class="headerlink" title="绝对定位position:absolute"></a>绝对定位position:absolute</h4><p><code>.wrapper li a img{position:absolute;bottom:0;right:-20px;height:150px;width:240px;}<br>.wrapper li a .info{position:absolute;left:0;top:0;width:120px;padding:4px 20px;}</code></p>
<h4 id="原生js"><a href="#原生js" class="headerlink" title="原生js"></a>原生js</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">initList</span></span>()&#123;&#125;</div><div class="line">		var subject = document.getElementById(<span class="string">'subject'</span>)</div><div class="line">		var oLi= subject.getElementsByTagName(<span class="string">'li'</span>);</div><div class="line">		<span class="keyword">for</span>(var i=0;i&lt;oLi.length;i++)&#123;</div><div class="line">		oLi[i].index = i;</div><div class="line">		oLi[i].onmouseover =<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">			<span class="keyword">for</span>(var j=0;j&lt;oLi.length;j++)&#123;</div><div class="line">			oLi[j].className=<span class="string">""</span>;</div><div class="line">			&#125;</div><div class="line">			oLi[this.index].className = <span class="string">'big'</span>;</div><div class="line">		&#125;</div><div class="line">		&#125;</div><div class="line">		initList();</div></pre></td></tr></table></figure>
<h4 id="jQuery-代码"><a href="#jQuery-代码" class="headerlink" title="jQuery 代码"></a>jQuery 代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> mouseover(e)&#123;</div><div class="line">           var list = $(<span class="string">'#subject li'</span>);</div><div class="line">           var target = $(e.target).parents(<span class="string">'li'</span>);</div><div class="line"></div><div class="line">           list.removeClass(<span class="string">'big'</span>);</div><div class="line">           target.addClass(<span class="string">'big'</span>);</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       (<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">           var outer = $(<span class="string">'#subject'</span>);</div><div class="line">           outer.find(<span class="string">'li'</span>).on(<span class="string">'mouseover'</span>, mouseover);</div><div class="line">       &#125;)()</div></pre></td></tr></table></figure>
<h4 id="Css中的手风琴效果"><a href="#Css中的手风琴效果" class="headerlink" title="Css中的手风琴效果"></a>Css中的手风琴效果</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojjsl7zpc.bkt.clouddn.com/accordion.gif?e=1487414162&amp;token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:eGY9hJOhUgXAFQoEigCtDsTI77M&quot; alt=&quot;开到荼蘼&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;knowledge-浮动布局&quot;&gt;&lt;a href=&quot;#knowledge-浮动布局&quot; class=&quot;headerlink&quot; title=&quot;knowledge:浮动布局&quot;&gt;&lt;/a&gt;knowledge:浮动布局&lt;/h4&gt;&lt;p&gt;&lt;code&gt;.wrapper li{width:240px;height:225px;overflow:hidden;float:left;}&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Flex-Box弹性盒模型初探</title>
    <link href="http://niaogege.site/2017/02/07/flex-box%E5%BC%B9%E6%80%A7%E7%9B%92%E6%A8%A1%E5%9E%8B%E5%88%9D%E6%8E%A2/"/>
    <id>http://niaogege.site/2017/02/07/flex-box弹性盒模型初探/</id>
    <published>2017-02-07T15:13:19.000Z</published>
    <updated>2017-02-07T15:25:22.348Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>弹性布局（flexible box）模块（目前是w3c候选的推荐）旨在提供一个更加有效的方式来布置，对齐和分布在容器之间的各项内容，即使它们的大小是未知或者动态变化的。</p>
</blockquote>
<p>由于flexbox是一个整体模块，而不是单一的一个属性，它涉及到了很多东西，包括它的整个属性集。它们之中有一些是在父容器上设置，而有一些则是在子容器上设置。<br><a id="more"></a></p>
<h3 id="属性介绍"><a href="#属性介绍" class="headerlink" title="属性介绍"></a>属性介绍</h3><ul>
<li>display: flex | inline-flex; (适用于父类容器元素上)</li>
</ul>
<p>box：将对象作为弹性伸缩盒显示。（伸缩盒最老版本）（css3）<br>inline-box：将对象作为内联块级弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）<br>flexbox：将对象作为弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）<br>inline-flexbox：将对象作为内联块级弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）<br>flex：将对象作为弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）<br>inline-flex：将对象作为内联块级弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）<br>注意:<br>1.css 列（CSS columns）在弹性盒子中不起作用<br>2.float, clear and vertical-align 在flex项目中不起作用</p>
<ul>
<li><p>flex-direction (适用于父类容器的元素上)<br>定义：设置或检索伸缩盒对象的子元素在父容器中的位置。<br>row：横向从左到右排列（左对齐），默认的排列方式。<br>row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面。<br>column：纵向排列。<br>column-reverse：反转纵向排列，从后往前排，最后一项排在最上面。</p>
</li>
<li><p>flex-wrap (适用于父类容器上)</p>
</li>
</ul>
<p>设置或检索伸缩盒对象的子元素超出父容器时是否换行。<br>flex-wrap: nowrap(不换行) | wrap(换行) | wrap-reverse</p>
<ul>
<li>flex-flow (适用于父类容器上)<br>设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。<br>当弹性盒里一行上的所有子元素都不能伸缩或已经达到其最大值时，这一属性可协助对多余的空间进行分配。当元素溢出某行时，这一属性同样会在对齐上进行控制。<br>justify-content: flex-start | flex-end | center | space-between | space-around</li>
<li>flex (适用于弹性盒模型子元素)<br>复合属性。设置或检索伸缩盒对象的子元素如何分配空间。</li>
</ul>
<p>如果缩写flex:1, 则其计算值为：1 1 0</p>
<p>flex：none | [ flex-grow ] || [ flex-shrink ] || [ flex-basis ]<br>none：none关键字的计算值为: 0 0 auto<br>[ flex-grow ]：定义弹性盒子元素的扩展比率。<br>[ flex-shrink ]：定义弹性盒子元素的收缩比率。<br>[ flex-basis ]：定义弹性盒子元素的默认基准值。</p>
<h4 id="常见的案例"><a href="#常见的案例" class="headerlink" title="常见的案例"></a>常见的案例</h4><p>常见3栏移动优先布局<br>css部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">.wrapper &#123;</div><div class="line">  display: flex;</div><div class="line">  flex-flow: row wrap;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* We tell all items to be 100% width */</div><div class="line">.header, .main, .nav, .aside, .footer &#123;</div><div class="line">  flex: 1 100%;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* We rely on <span class="built_in">source</span> order <span class="keyword">for</span> mobile-first approach</div><div class="line"> * <span class="keyword">in</span> this <span class="keyword">case</span>:</div><div class="line"> * 1. header</div><div class="line"> * 2. nav</div><div class="line"> * 3. main</div><div class="line"> * 4. aside</div><div class="line"> * 5. footer</div><div class="line"> */</div><div class="line"></div><div class="line">/* Medium screens */</div><div class="line">@media all and (min-width: 600px) &#123;</div><div class="line">  /* We tell both sidebars to share a row */</div><div class="line">  .aside &#123; flex: 1 auto; &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* Large screens */</div><div class="line">@media all and (min-width: 800px) &#123;</div><div class="line">  /* We invert order of first sidebar and main</div><div class="line">   * And tell the main element to take twice as much width as the other two sidebars </div><div class="line">   */</div><div class="line">  .main &#123; flex: 2 0px; &#125;</div><div class="line"></div><div class="line">  .aside-1 &#123; order: 1; &#125;</div><div class="line">  .main    &#123; order: 2; &#125;</div><div class="line">  .aside-2 &#123; order: 3; &#125;</div><div class="line">  .footer  &#123; order: 4; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>html部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=<span class="string">"wrapper"</span>&gt;</div><div class="line">  &lt;header class=<span class="string">"header"</span>&gt;Header&lt;/header&gt;</div><div class="line">  &lt;article class=<span class="string">"main"</span>&gt;</div><div class="line">    &lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.&lt;/p&gt;  </div><div class="line">  &lt;/article&gt;</div><div class="line">  &lt;aside class=<span class="string">"aside aside-1"</span>&gt;Aside 1&lt;/aside&gt;</div><div class="line">  &lt;aside class=<span class="string">"aside aside-2"</span>&gt;Aside 2&lt;/aside&gt;</div><div class="line">  &lt;footer class=<span class="string">"footer"</span>&gt;Footer&lt;/footer&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;弹性布局（flexible box）模块（目前是w3c候选的推荐）旨在提供一个更加有效的方式来布置，对齐和分布在容器之间的各项内容，即使它们的大小是未知或者动态变化的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于flexbox是一个整体模块，而不是单一的一个属性，它涉及到了很多东西，包括它的整个属性集。它们之中有一些是在父容器上设置，而有一些则是在子容器上设置。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/css/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://niaogege.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap-Two:0205 Button and Image-Study</title>
    <link href="http://niaogege.site/2017/02/05/bootstrap-two-0205-button-study/"/>
    <id>http://niaogege.site/2017/02/05/bootstrap-two-0205-button-study/</id>
    <published>2017-02-05T07:27:26.000Z</published>
    <updated>2017-02-18T14:33:11.259Z</updated>
    
    <content type="html"><![CDATA[<h4 id="button-按钮"><a href="#button-按钮" class="headerlink" title="button 按钮"></a>button 按钮</h4><ul>
<li><p>default button<br>.btn-primary:首选项 .btn-default .btn-info 一般信息</p>
</li>
<li><p>button sizes<br>.btn-lg .btn-default .btn-sm .btn-xs .btn-block(将其拉伸为父元素的100%宽度)</p>
</li>
<li><p>disabled  and active state<br>1.anchor element disabled</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=<span class="string">"#"</span> class=<span class="string">"btn btn-large btn-primary disabled"</span>&gt;Primary link&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>2.button element<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;button <span class="built_in">type</span>=<span class="string">"button"</span> class=<span class="string">"btn btn-default btn-lg active"</span>&gt;Button&lt;/button&gt;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="image-图片"><a href="#image-图片" class="headerlink" title="image 图片"></a>image 图片</h4><p>Add classes to an <img> element to easily style images in any project.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> class=<span class="string">"img-rounded"</span>&gt; 圆角图片</div><div class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> class=<span class="string">"img-circle"</span>&gt; 圆形图片 </div><div class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> class=<span class="string">"img-thumbnail"</span>&gt;</div><div class="line">&lt;img src=<span class="string">""</span> alt=<span class="string">""</span> class=<span class="string">"img-responsive"</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="form"><a href="#form" class="headerlink" title="form"></a>form</h4><ul>
<li>.form-inline 内联表单，可以通过为label设置.sr-only类将其隐藏</li>
<li><p>.input-group </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div class=<span class="string">"input-group"</span>&gt;</div><div class="line">  &lt;div class=<span class="string">"input-group-addon"</span>&gt;$&lt;/div&gt;</div><div class="line">  &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> class=<span class="string">"form-control"</span> id=<span class="string">"exampleInputAmount"</span> placeholder=<span class="string">"Amount"</span>&gt;</div><div class="line">  &lt;div class=<span class="string">"input-group-addon"</span>&gt;.00&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>.form-horizontal 水平排列的表单，并联合使用 Bootstrap 预置的栅格类</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;form class=<span class="string">"form-horizontal"</span>&gt;</div><div class="line">  &lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputEmail3"</span> class=<span class="string">"col-sm-2 control-label"</span>&gt;Email&lt;/label&gt; </div><div class="line">    &lt;div class=<span class="string">"col-sm-10"</span>&gt;</div><div class="line">      &lt;input <span class="built_in">type</span>=<span class="string">"email"</span> class=<span class="string">"form-control"</span> id=<span class="string">"inputEmail3"</span> placeholder=<span class="string">"Email"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputPassword3"</span> class=<span class="string">"col-sm-2 control-label"</span>&gt;Password&lt;/label&gt;</div><div class="line">    &lt;div class=<span class="string">"col-sm-10"</span>&gt;</div><div class="line">      &lt;input <span class="built_in">type</span>=<span class="string">"password"</span> class=<span class="string">"form-control"</span> id=<span class="string">"inputPassword3"</span> placeholder=<span class="string">"Password"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">    &lt;div class=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt; //列偏移,对齐</div><div class="line">      &lt;div class=<span class="string">"checkbox"</span>&gt;</div><div class="line">        &lt;label&gt;</div><div class="line">          &lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span>&gt; Remember me</div><div class="line">        &lt;/label&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">    &lt;div class=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt; //列偏移</div><div class="line">      &lt;button <span class="built_in">type</span>=<span class="string">"submit"</span> class=<span class="string">"btn btn-default"</span>&gt;Sign <span class="keyword">in</span>&lt;/button&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>内联单选和多选框<br>通过将 .checkbox-inline 或 .radio-inline 类应用到一系列的多选框（checkbox）或单选框（radio）控件上，可以使这些控件排列在一行。</p>
</li>
<li>焦点状态<br>我们将某些表单控件的默认 outline 样式移除即outline:0;box-shadow: 0 0 8px rgba(82,168,236,.6);，然后对 :focus 状态赋予 box-shadow 属性。</li>
<li>添加额外的图标,反馈图标（feedback icon）只能使用在文本输入框 <input class="form-control"> 元素上。<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div class=<span class="string">"form-group has-success has-feedback"</span>&gt;</div><div class="line">  &lt;label class=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess2"</span>&gt;Input with success&lt;/label&gt;</div><div class="line">  &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> class=<span class="string">"form-control"</span> id=<span class="string">"inputSuccess2"</span> aria-describedby=<span class="string">"inputSuccess2Status"</span>&gt;</div><div class="line">  &lt;span class=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</div><div class="line">  &lt;span id=<span class="string">"inputSuccess2Status"</span> class=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;button-按钮&quot;&gt;&lt;a href=&quot;#button-按钮&quot; class=&quot;headerlink&quot; title=&quot;button 按钮&quot;&gt;&lt;/a&gt;button 按钮&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;default button&lt;br&gt;.btn-primary:首选项 .btn-default .btn-info 一般信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;button sizes&lt;br&gt;.btn-lg .btn-default .btn-sm .btn-xs .btn-block(将其拉伸为父元素的100%宽度)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;disabled  and active state&lt;br&gt;1.anchor element disabled&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;a href=&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; class=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-large btn-primary disabled&quot;&lt;/span&gt;&amp;gt;Primary link&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.button element&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;button &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; class=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-default btn-lg active&quot;&lt;/span&gt;&amp;gt;Button&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="bootstrap" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/bootstrap/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="bootstrap" scheme="http://niaogege.site/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>前端成长必备：Js继承(1)</title>
    <link href="http://niaogege.site/2017/02/04/%E5%89%8D%E7%AB%AF%E6%88%90%E9%95%BF%E5%BF%85%E5%A4%87%EF%BC%9Ajs%E7%BB%A7%E6%89%BF-1/"/>
    <id>http://niaogege.site/2017/02/04/前端成长必备：js继承-1/</id>
    <published>2017-02-04T15:50:44.000Z</published>
    <updated>2017-02-07T15:30:51.700Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-apply-与call"><a href="#1-apply-与call" class="headerlink" title="1.apply()与call()"></a>1.apply()与call()</h4><p>函数 两个非继承而来的方法,用途是在特定的作用域中调用函数，实际上等于设置函数体内的this对象的值</p>
<ul>
<li>apply(1.运行函数的作用域，2.参数数组)<br>function sum(n1,n2){<br>  return n1+n2;<br>}<br>function callSum1(n1,n2){<br>  return sum.apply(this,arguments);<br>}<br>function callSum2(n1,n2){<br>  return sum.apply(this,[n1,n2]);<br>}<br>console.log(callSum1(10,20));<br>console.log(callSum1(20,30));</li>
<li>call(1.运行函数的作用域，2.参数必须逐个列举)<br>function sum(num1,num2){return num1+num2;}<br>function callSum(q1,q2){return sum.call(this,q1,q2)} //sum.call()，传递给函数的参数必须逐个列举出来<br>alert(callSum(5,3));</li>
<li>传递参数并非apply和call用武之地，真正强大的地方是能够扩充函数赖以运行的作用域<a id="more"></a>
window.color = ‘red’;<br>var o ={color:’blue’};<br>function sayColor(){<br>  alert(this.color);<br>}<br>sayColor();<br>sayColor.call(o);//blue<br>o.sayColor = sayColor;<br>o.sayColor();<br>使用apply和calL扩充作用域的最大好处是对象不需要与方法有任何的耦合关系</li>
</ul>
<h4 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h4><p>function Super(){this.name = ‘Super’;this.arr = [1,2,3,4];}//数组是引用类型值<br>Super.prototype.sayName = function(){return this.name;}<br>function Sub(){this.age = 12;}<br>Sub.prototype = new Super();<br>var test= new Sub();<br>test.arr.push(‘black’);<br>console.log(test.arr); //[1, 2, 3, 4, “black”]<br>var test2 =new Sub();<br>console.log(test2.arr);//[1, 2, 3, 4, “black”]*/</p>
<p>//原型链 》 test-Super实例-Super.prototype,改变子类的prototype,使其指向父类的一个实例<br>//所有函数的默认原型都是Object的实例，因此默认原型都会包含一个内部指针，这也是自定义类型都会继承toString()、valueOf()方法的根本原因<br>//原型链的问题1.引用类型值的原型属性会被所有实例共享2.创建子类型实例时，不能向父类型的构造函数中传递参数</p>
<h4 id="借用构造函数-constructor-stealing-或者伪造对象-或者经典继承"><a href="#借用构造函数-constructor-stealing-或者伪造对象-或者经典继承" class="headerlink" title="借用构造函数 constructor stealing 或者伪造对象 或者经典继承"></a>借用构造函数 constructor stealing 或者伪造对象 或者经典继承</h4><p>function Super(){<br>    this.arr = [‘blue’,’red’,’green’];<br>}<br>function Suber(){<br>    Super.call(this);<br>}<br>var instance1 = new Suber();<br>instance1.arr.push(‘black’);<br>console.log(instance1.arr);<br>var instance2 = new Suber();<br>console.log(instance2.arr);<br>//通过借用构造函数，通过使用call或者apply(),我们实际上在新创建的实例环境下调用Super构造函数，这样在新Suber()函数中定义的所有对象初始化代码<br>//2.传递参数<br>function Super1(name){this.name = name;}<br>function Suber1(){Super1.call(this,’chenpeng’);<br>this.age = 29;}<br>var instance = new Suber1();<br>console.log(instance.name);<br>console.log(instance.age)</p>
<p>//借用构造函数的问题：方法都在构造函数中，无法复用</p>
<h4 id="组合继承-combination-inheritance-或者伪经典继承-背后的思路是使用原型链实现对原型属性和方法的继承，通过借用构造函数来实现对实例属性的继承"><a href="#组合继承-combination-inheritance-或者伪经典继承-背后的思路是使用原型链实现对原型属性和方法的继承，通过借用构造函数来实现对实例属性的继承" class="headerlink" title="组合继承(combination inheritance)或者伪经典继承,背后的思路是使用原型链实现对原型属性和方法的继承，通过借用构造函数来实现对实例属性的继承"></a>组合继承(combination inheritance)或者伪经典继承,背后的思路是使用原型链实现对原型属性和方法的继承，通过借用构造函数来实现对实例属性的继承</h4><p>function Super2(name){this.name = name;this.colors = [‘red’,’blue’,’green’];}<br>Super2.prototype.sayName = function(){console.log(this.name);}<br>function Suber2(name,age){Super2.call(this,name);<br>    this.age = age;<br>}<br>Suber2.prototype = new Super2();<br>Suber2.prototype.constructor = Suber2;<br>Suber2.prototype.sayAge = function(){console.log(this.age);}<br>var instance1 = new Suber2(‘chenpeng’,26);<br>instance1.colors.push(‘black’);<br>console.log(instance1.colors);<br>instance1.sayName();<br>instance1.sayAge(); </p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-apply-与call&quot;&gt;&lt;a href=&quot;#1-apply-与call&quot; class=&quot;headerlink&quot; title=&quot;1.apply()与call()&quot;&gt;&lt;/a&gt;1.apply()与call()&lt;/h4&gt;&lt;p&gt;函数 两个非继承而来的方法,用途是在特定的作用域中调用函数，实际上等于设置函数体内的this对象的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apply(1.运行函数的作用域，2.参数数组)&lt;br&gt;function sum(n1,n2){&lt;br&gt;  return n1+n2;&lt;br&gt;}&lt;br&gt;function callSum1(n1,n2){&lt;br&gt;  return sum.apply(this,arguments);&lt;br&gt;}&lt;br&gt;function callSum2(n1,n2){&lt;br&gt;  return sum.apply(this,[n1,n2]);&lt;br&gt;}&lt;br&gt;console.log(callSum1(10,20));&lt;br&gt;console.log(callSum1(20,30));&lt;/li&gt;
&lt;li&gt;call(1.运行函数的作用域，2.参数必须逐个列举)&lt;br&gt;function sum(num1,num2){return num1+num2;}&lt;br&gt;function callSum(q1,q2){return sum.call(this,q1,q2)} //sum.call()，传递给函数的参数必须逐个列举出来&lt;br&gt;alert(callSum(5,3));&lt;/li&gt;
&lt;li&gt;传递参数并非apply和call用武之地，真正强大的地方是能够扩充函数赖以运行的作用域
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://niaogege.site/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap One:table and Form</title>
    <link href="http://niaogege.site/2017/02/03/bootstrap-one-table-and-form/"/>
    <id>http://niaogege.site/2017/02/03/bootstrap-one-table-and-form/</id>
    <published>2017-02-03T14:56:03.000Z</published>
    <updated>2017-02-05T04:23:15.954Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>bootstrap:Sleek, intuitive, and powerful front-end framework for faster and easier web development.(简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。)</p>
</blockquote>
<a id="more"></a>
<ul>
<li><p>table<br>.table:defalt property<br>.table.striped:条纹状表格<br>.table-bordered:带边框的表格<br>.table-hover:鼠标悬停<br>.table-condensed:紧缩表格</p>
</li>
<li><p>form</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;form action=<span class="string">"#"</span> class=<span class="string">"form-horizontal"</span>&gt;</div><div class="line">			&lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">				&lt;label <span class="keyword">for</span>=<span class="string">'exampleInputEamil'</span>class=<span class="string">"col-lg-1 control-label"</span>&gt; Email &lt;/label&gt;</div><div class="line">				&lt;div class=<span class="string">'col-lg-11'</span>&gt;</div><div class="line">				&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"exampleInputEamil"</span> class=<span class="string">"form-control"</span> placeholder=<span class="string">"email address"</span>&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">			&lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">				&lt;label <span class="keyword">for</span>=<span class="string">'exampleInputPassword'</span> class=<span class="string">"col-lg-1 control-label"</span>&gt; Password &lt;/label&gt;</div><div class="line">				&lt;div class=<span class="string">'col-lg-11'</span>&gt;</div><div class="line">				&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"exampleInputPassword"</span> class=<span class="string">"form-control"</span> placeholder=<span class="string">"Password "</span>&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">			&lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">				&lt;div class=<span class="string">"col-lg-1 col-lg-offset-1"</span>&gt;</div><div class="line">				&lt;div class=<span class="string">"checkbox"</span>&gt;</div><div class="line">					&lt;label&gt;&lt;input <span class="built_in">type</span>=<span class="string">'checkbox'</span>&gt;Remembe&lt;/label&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">			&lt;div class=<span class="string">"form-group"</span>&gt;</div><div class="line">				&lt;div class=<span class="string">"col-lg-1 col-lg-offset-1"</span>&gt;</div><div class="line">				&lt;button class=<span class="string">'btn btn-default'</span>&gt;提交&lt;/button&gt;</div><div class="line">				&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">		&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>.form-control:表单的宽度<br>.form-group:(纵向)表单上下加距离，为label/input外层加div的class<br>.form-inline:给form添加内联表单<br>.col-lg-offset-1:列偏移，往右移<br>.input-group-addon:与文本框融合</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;bootstrap:Sleek, intuitive, and powerful front-end framework for faster and easier web development.(简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="bootstrap" scheme="http://niaogege.site/categories/bootstrap/"/>
    
    
      <category term="bootstrap" scheme="http://niaogege.site/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>GIT Two :Learn How to Use Git (二)</title>
    <link href="http://niaogege.site/2017/02/02/GIT-TWO-learn-how-to-use-git-%E4%BA%8C/"/>
    <id>http://niaogege.site/2017/02/02/GIT-TWO-learn-how-to-use-git-二/</id>
    <published>2017-02-02T11:44:00.000Z</published>
    <updated>2017-02-02T15:10:47.688Z</updated>
    
    <content type="html"><![CDATA[<p>working Directory :工作区 ；repository 版本库 包含stage/index(暂存区)，master branch;<br></p>
<blockquote>
<p>common knowledge <br></p>
</blockquote>
<h4 id="change-or-discard-change-管理或者撤销修改"><a href="#change-or-discard-change-管理或者撤销修改" class="headerlink" title="change or discard change 管理或者撤销修改"></a>change or discard change 管理或者撤销修改</h4><ul>
<li>1.git commit 只负责把暂存区的修改提交，如果之前没有用add 命令,git commit 不会提交</li>
<li>2.git checkout – file to discard changes in working directory,撤销修改</li>
<li>3.改乱了内容，还添加到了stage,第一步用命令 git reset HEAD file ,第二步再用git checkout – file </li>
<li>4.版本回退，git log &gt; git reset –hard 版本号</li>
<li>5.command git rm file 用于删除一个文件，如果一个文件已经提交到版本库里，不要担心误删，但是只能恢复到最新版本，会丢失最近一次提交后修改的内容，从版本库里删除需用到git rm,并且git commit<a id="more"></a>
<h4 id="remote-repository"><a href="#remote-repository" class="headerlink" title="remote repository"></a>remote repository</h4></li>
<li>git remote add origin git@github.com:niaogege/works.git</li>
<li>git push -u origin master(第一次推送master分支的内容)</li>
<li>每次本地提交后，只要有必要，使用命令git push origin master</li>
<li>从remote repository download ,ues this command:git clone git@github.com:niaogege/works.git</li>
</ul>
<h4 id="创建、合并、删除分支"><a href="#创建、合并、删除分支" class="headerlink" title="创建、合并、删除分支"></a>创建、合并、删除分支</h4><ul>
<li>git checkout -b dev 相当于git branch dev 并且切换git checkout dev</li>
<li>git branch 列出所有分支，当前分支用*表示</li>
<li>git checkout <name> 切换分支</name></li>
<li>git merge dev 合并dev分支到当前分支</li>
<li>git branch -d <name> 删除分支</name></li>
<li>git –graph 查看分支合并图 当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</li>
<li>git merge –no-ff -m “merge with no-ff” dev:准备合并dev分支，请注意–no-ff参数，表示禁用Fast forward：</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;working Directory :工作区 ；repository 版本库 包含stage/index(暂存区)，master branch;&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;common knowledge &lt;br/&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;change-or-discard-change-管理或者撤销修改&quot;&gt;&lt;a href=&quot;#change-or-discard-change-管理或者撤销修改&quot; class=&quot;headerlink&quot; title=&quot;change or discard change 管理或者撤销修改&quot;&gt;&lt;/a&gt;change or discard change 管理或者撤销修改&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1.git commit 只负责把暂存区的修改提交，如果之前没有用add 命令,git commit 不会提交&lt;/li&gt;
&lt;li&gt;2.git checkout – file to discard changes in working directory,撤销修改&lt;/li&gt;
&lt;li&gt;3.改乱了内容，还添加到了stage,第一步用命令 git reset HEAD file ,第二步再用git checkout – file &lt;/li&gt;
&lt;li&gt;4.版本回退，git log &amp;gt; git reset –hard 版本号&lt;/li&gt;
&lt;li&gt;5.command git rm file 用于删除一个文件，如果一个文件已经提交到版本库里，不要担心误删，但是只能恢复到最新版本，会丢失最近一次提交后修改的内容，从版本库里删除需用到git rm,并且git commit
    
    </summary>
    
      <category term="Git" scheme="http://niaogege.site/categories/Git/"/>
    
    
      <category term="GIT" scheme="http://niaogege.site/tags/GIT/"/>
    
      <category term="版本控制工具" scheme="http://niaogege.site/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Jquery中each()方法的使用指南</title>
    <link href="http://niaogege.site/2017/02/01/jquery%E4%B8%AD-%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://niaogege.site/2017/02/01/jquery中-方法的使用指南/</id>
    <published>2017-02-01T13:57:03.000Z</published>
    <updated>2017-02-01T14:27:51.077Z</updated>
    
    <content type="html"><![CDATA[<h4 id="each-与-selector-each-不同-后者专用于jquery对象的遍历"><a href="#each-与-selector-each-不同-后者专用于jquery对象的遍历" class="headerlink" title="$.each()与$(selector).each()不同, 后者专用于jquery对象的遍历"></a>$.each()与$(selector).each()不同, 后者专用于jquery对象的遍历</h4><p>前者可用于遍历任何的集合(无论是数组或对象),如果是数组,回调函数每次传入数组的索引和对应的值(值亦可以通过this 关键字获取,但javascript总会包装this 值作为一个对象—尽管是一个字符串或是一个数字),方法会返回被遍历对象的第一参数.<br><a id="more"></a><br>each()方法能使DOM循环结构简洁，不容易出错。each()函数封装了十分强大的遍历功能，使用也很方便，它可以遍历一维数组、多维数组、DOM, JSON 等等<br>在javaScript开发过程中使用$each可以大大的减轻我们的工作量。</p>
<h4 id="下面提一下each的几种常用的用法"><a href="#下面提一下each的几种常用的用法" class="headerlink" title="下面提一下each的几种常用的用法"></a>下面提一下each的几种常用的用法</h4><ul>
<li>each处理一维数组</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var arr1 = [ <span class="string">"aaa"</span>, <span class="string">"bbb"</span>, <span class="string">"ccc"</span> ]; </div><div class="line">$.each(arr1, <span class="keyword">function</span>(i,val)&#123; </div><div class="line">alert(i); </div><div class="line">alert(val);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p>each处理二维数组</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">　var arr2 = [[<span class="string">'a'</span>, <span class="string">'aa'</span>, <span class="string">'aaa'</span>], [<span class="string">'b'</span>, <span class="string">'bb'</span>, <span class="string">'bbb'</span>], [<span class="string">'c'</span>, <span class="string">'cc'</span>, <span class="string">'ccc'</span>]] </div><div class="line">　　$.each(arr, <span class="keyword">function</span>(i, item)&#123; </div><div class="line">alert(i); </div><div class="line">alert(item); </div><div class="line">　　&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>对此二位数组的处理稍作变更之后</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var arr = [[<span class="string">'a'</span>, <span class="string">'aa'</span>, <span class="string">'aaa'</span>], [<span class="string">'b'</span>, <span class="string">'bb'</span>, <span class="string">'bbb'</span>], [<span class="string">'c'</span>, <span class="string">'cc'</span>, <span class="string">'ccc'</span>]] </div><div class="line">　　$.each(arr, <span class="keyword">function</span>(i, item)&#123; </div><div class="line">　　$.each(item,<span class="keyword">function</span>(j,val)&#123;</div><div class="line">　　　　 alert(j);</div><div class="line">　　　　alert(val);</div><div class="line">　&#125;); </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>如果你dom中有一段这样的代码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;input name=<span class="string">"aaa"</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> value=<span class="string">"111"</span> /&gt;</div><div class="line">&lt;input name=<span class="string">"bbb"</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> value=<span class="string">"222"</span> /&gt;</div><div class="line">&lt;input name=<span class="string">"ccc"</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> value=<span class="string">"333"</span> /&gt;</div><div class="line">&lt;input name=<span class="string">"ddd"</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> value=<span class="string">"444"</span>/&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>然后你使用each如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.each($(<span class="string">"input:hidden"</span>), <span class="keyword">function</span>(i,val)&#123; </div><div class="line">alert(val);</div><div class="line">alert(i);</div><div class="line">alert(val.name);</div><div class="line">alert(val.value); </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>如果将以上面一段代码改变成如下的形式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"input:hidden"</span>).each(<span class="keyword">function</span>(i,val)&#123;</div><div class="line">alert(i);</div><div class="line">alert(val.name);</div><div class="line">alert(val.value); </div><div class="line">&#125;);</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;each-与-selector-each-不同-后者专用于jquery对象的遍历&quot;&gt;&lt;a href=&quot;#each-与-selector-each-不同-后者专用于jquery对象的遍历&quot; class=&quot;headerlink&quot; title=&quot;$.each()与$(selector).each()不同, 后者专用于jquery对象的遍历&quot;&gt;&lt;/a&gt;$.each()与$(selector).each()不同, 后者专用于jquery对象的遍历&lt;/h4&gt;&lt;p&gt;前者可用于遍历任何的集合(无论是数组或对象),如果是数组,回调函数每次传入数组的索引和对应的值(值亦可以通过this 关键字获取,但javascript总会包装this 值作为一个对象—尽管是一个字符串或是一个数字),方法会返回被遍历对象的第一参数.&lt;br&gt;
    
    </summary>
    
      <category term="js" scheme="http://niaogege.site/categories/js/"/>
    
    
      <category term="js" scheme="http://niaogege.site/tags/js/"/>
    
      <category term="jQuery" scheme="http://niaogege.site/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>随笔：2017新春快乐！</title>
    <link href="http://niaogege.site/2017/01/27/2017%E6%96%B0%E6%98%A5%E5%BF%AB%E4%B9%90%EF%BC%81/"/>
    <id>http://niaogege.site/2017/01/27/2017新春快乐！/</id>
    <published>2017-01-27T04:26:33.000Z</published>
    <updated>2017-01-27T04:33:15.921Z</updated>
    
    <content type="html"><![CDATA[<h4 id="祝贺大家新春快乐，鸡年吉祥，恭喜发财！"><a href="#祝贺大家新春快乐，鸡年吉祥，恭喜发财！" class="headerlink" title="祝贺大家新春快乐，鸡年吉祥，恭喜发财！"></a>祝贺大家新春快乐，鸡年吉祥，恭喜发财！</h4><p><img src="http://ojjsl7zpc.bkt.clouddn.com/msdbxinchun.jpg?e=1485494831&token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:DSi4Uhu-uXkzFFrC8Yu8cn-Az4U"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;祝贺大家新春快乐，鸡年吉祥，恭喜发财！&quot;&gt;&lt;a href=&quot;#祝贺大家新春快乐，鸡年吉祥，恭喜发财！&quot; class=&quot;headerlink&quot; title=&quot;祝贺大家新春快乐，鸡年吉祥，恭喜发财！&quot;&gt;&lt;/a&gt;祝贺大家新春快乐，鸡年吉祥，恭喜发财！&lt;/h4&gt;&lt;p&gt;&lt;i
    
    </summary>
    
      <category term="随笔" scheme="http://niaogege.site/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://niaogege.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔：有时候几件趣事能让你 Recovery</title>
    <link href="http://niaogege.site/2017/01/22/%E9%9A%8F%E7%AC%94%EF%BC%9A%E6%9C%89%E6%97%B6%E5%80%99%E5%87%A0%E4%BB%B6%E8%B6%A3%E4%BA%8B%E8%83%BD%E8%AE%A9%E4%BD%A0-Recovery/"/>
    <id>http://niaogege.site/2017/01/22/随笔：有时候几件趣事能让你-Recovery/</id>
    <published>2017-01-22T14:35:30.000Z</published>
    <updated>2017-01-22T14:41:45.528Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>最近，身体有些不适，脑袋一直晕乎乎的，周六在家躺了一天，晚上尽量早点休息。大过年的，完全很淡定，心平气和，完全不像还有4天要过年的节奏。</p>
</blockquote>
<h5 id="好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不晕了。这个可以有！"><a href="#好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不晕了。这个可以有！" class="headerlink" title="好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不晕了。这个可以有！"></a>好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不晕了。这个可以有！</h5><p><img src="http://ojjsl7zpc.bkt.clouddn.com/shufa4.jpg?e=1485099350&token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:PN0LzD_6yrnQMtu3lepxjQVFq3w"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近，身体有些不适，脑袋一直晕乎乎的，周六在家躺了一天，晚上尽量早点休息。大过年的，完全很淡定，心平气和，完全不像还有4天要过年的节奏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不
    
    </summary>
    
    
      <category term="随笔" scheme="http://niaogege.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>原生Js打印效果</title>
    <link href="http://niaogege.site/2017/01/16/%E5%8E%9F%E7%94%9Fjs%E6%89%93%E5%8D%B0%E6%95%88%E6%9E%9C/"/>
    <id>http://niaogege.site/2017/01/16/原生js打印效果/</id>
    <published>2017-01-16T14:32:10.000Z</published>
    <updated>2017-01-18T13:23:43.220Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojjsl7zpc.bkt.clouddn.com/typewriter.gif?e=1484580861&token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:9In0pZrZcnrbc80EJoST46IzsFA"></p>
<h4 id="原生js打印效果，主要用到以下几个知识点："><a href="#原生js打印效果，主要用到以下几个知识点：" class="headerlink" title="原生js打印效果，主要用到以下几个知识点："></a>原生js打印效果，主要用到以下几个知识点：</h4><ul>
<li><p>1.nbsp;半角的不断行的空白格（推荐使用）2.ensp;  半角的空格 3.emsp;  全角的空格,每个字符前面都加上&amp;</p>
</li>
<li><p>2.<code>string.charAt()</code>返回指定位置的字符</p>
</li>
<li><p>3.<code>indexOf()</code>,array.indexOf(item,start)返回某个指定的字符串在字符串中首次出现的位置</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>4.<code>substring()</code>,code.substring(0,pos)中的substring()用于提取字符串中介于两个指定下标之间的字符，substring()方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符。</p>
</li>
<li><p>5.<code>classList.add()</code>,classList 属性返回元素的类名，作为 DOMTokenList 对象。该属性用于在元素中添加add，移除remove及切换toggle CSS 类。</p>
</li>
</ul>
<h4 id="源代码如下"><a href="#源代码如下" class="headerlink" title="源代码如下:"></a>源代码如下:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;head&gt;</div><div class="line">		&lt;meta charset=<span class="string">"utf-8"</span>/&gt;</div><div class="line">		&lt;meta name=<span class="string">"Keywords"</span> content=<span class="string">""</span> /&gt;</div><div class="line">		&lt;meta name=<span class="string">"Description"</span> content=<span class="string">""</span> /&gt;</div><div class="line">		&lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span> /&gt;</div><div class="line">		&lt;meta name=<span class="string">"viewpoint"</span> content=<span class="string">"width=device-width,initial-scale=1,user-scalable= no"</span>/&gt;</div><div class="line">		&lt;title&gt;0116 printer&lt;/title&gt;</div><div class="line">		&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</div><div class="line">		.typewriter&#123;display:none;width:40em;line-height:1.6;border:1px solid <span class="comment">#2dcb70;padding:1em 3em;margin:5em auto;font-family:Microsoft Yahei;font-weight:normal;white-space:normal;-webkit-font-smoothing:antialiased;/*字符反锯齿*/;color:hsla(0,10%,20%,0.9);&#125;</span></div><div class="line">        .typewriter:after&#123;content:<span class="string">"_"</span>;animation:flash .6s steps(2,start) infinite;-webkit-animation:flash .6s steps(2,start) infinite;&#125;</div><div class="line">        .typewriter.gameover:after&#123;display:none;&#125;</div><div class="line">        @keyframes flash&#123;</div><div class="line">            0%&#123;visibility:visible;&#125;</div><div class="line">            100%&#123;visibility:hidden;&#125;</div><div class="line">        &#125;</div><div class="line">        @-webkit-keyframes flash&#123;</div><div class="line">            0%&#123;visibility:visible;&#125;</div><div class="line">            100%&#123;visibility:hidden;&#125;</div><div class="line">        &#125;</div><div class="line">		&lt;/style&gt;</div><div class="line">	&lt;/head&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">		&lt;div class=<span class="string">"typewriter"</span>&gt;   &lt;!--1.&amp;nbsp; 半角的不断行的空白格（推荐使用）2.&amp;ensp;  半角的空格 3.&amp;emsp;  全角的空格--&gt;</div><div class="line">			1. Whatever is worth doing is worth doing well.&lt;br /&gt;</div><div class="line">			&amp;emsp;任何值得做的，就把它做好。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line">			2. Happiness is a way station between too much and too little.&lt;br /&gt;</div><div class="line">			&amp;emsp;幸福是太多和太少之间的一站。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line">			3. In love folly is always sweet.&lt;br /&gt;</div><div class="line">			&amp;emsp;恋爱中，干傻事总是让人感到十分美妙。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line">			4. The hard part isn’t making the decision. It’s living with it.&lt;br /&gt;</div><div class="line">			&amp;emsp;做出决定并不困难，困难的是接受决定。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line">			5. Your happy passer-by all knows, my distressed there is no place hides.&lt;br /&gt;</div><div class="line">			&amp;emsp;你的幸福路人皆知，我的狼狈无处遁形。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line">			6. You may be out of my sight, but never out of my mind.&lt;br /&gt;</div><div class="line">			&amp;emsp;你也许已走出我的视线，但从未走出我的思念。</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/body&gt;</div><div class="line">	&lt;script&gt;</div><div class="line">		(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">        var typewriter=document.querySelector(<span class="string">".typewriter"</span>),</div><div class="line">                code=typewriter.innerHTML,</div><div class="line">                pos=0,</div><div class="line">                len=code.length;</div><div class="line">        typewriter.innerHTML=<span class="string">""</span>;</div><div class="line">        typewriter.style.display=<span class="string">"block"</span>;</div><div class="line">        <span class="keyword">function</span> <span class="function"><span class="title">typewriting</span></span>()&#123;</div><div class="line">            pos++;</div><div class="line">            <span class="keyword">if</span>(pos &lt;= len)&#123;</div><div class="line">                switch(code.charAt(pos))  //charAt()返回指定位置的字符</div><div class="line">                &#123;</div><div class="line">                    <span class="keyword">case</span> <span class="string">"&lt;"</span>: //&lt;&gt;代码开始的字符</div><div class="line">                        pos = code.indexOf(<span class="string">"&gt;"</span>,pos);  //array.indexOf(item,start)返回某个指定的字符串在字符串中首次出现的位置</div><div class="line">                        <span class="built_in">break</span>;						</div><div class="line">                    <span class="keyword">case</span> <span class="string">"&amp;"</span>:  </div><div class="line">                        pos = code.indexOf(<span class="string">";"</span>,pos);</div><div class="line">                        <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">                typewriter.innerHTML=code.substring(0,pos);//substring()用于提取字符串中介于两个指定下标之间的字符，substring() 方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符。</div><div class="line">                <span class="built_in">set</span>Timeout(typewriting,100);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                typewriter.classList.add(<span class="string">"gameover"</span>);//classList 属性返回元素的类名，作为 DOMTokenList 对象。该属性用于在元素中添加，移除及切换 CSS 类。</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        typewriting();</div><div class="line">    &#125;)();</div><div class="line">	&lt;/script&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojjsl7zpc.bkt.clouddn.com/typewriter.gif?e=1484580861&amp;token=NUT82f__mRq-ZGvkrbqw7Zxle80aB7nUArvrHibz:9In0pZrZcnrbc80EJoST46IzsFA&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;原生js打印效果，主要用到以下几个知识点：&quot;&gt;&lt;a href=&quot;#原生js打印效果，主要用到以下几个知识点：&quot; class=&quot;headerlink&quot; title=&quot;原生js打印效果，主要用到以下几个知识点：&quot;&gt;&lt;/a&gt;原生js打印效果，主要用到以下几个知识点：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.nbsp;半角的不断行的空白格（推荐使用）2.ensp;  半角的空格 3.emsp;  全角的空格,每个字符前面都加上&amp;amp;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.&lt;code&gt;string.charAt()&lt;/code&gt;返回指定位置的字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.&lt;code&gt;indexOf()&lt;/code&gt;,array.indexOf(item,start)返回某个指定的字符串在字符串中首次出现的位置&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端" scheme="http://niaogege.site/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="特效" scheme="http://niaogege.site/tags/%E7%89%B9%E6%95%88/"/>
    
      <category term="javascript" scheme="http://niaogege.site/tags/javascript/"/>
    
  </entry>
  
</feed>
