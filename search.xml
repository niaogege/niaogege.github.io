<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[随笔：2017新春快乐！]]></title>
      <url>%2F2017%2F01%2F27%2F2017%E6%96%B0%E6%98%A5%E5%BF%AB%E4%B9%90%EF%BC%81%2F</url>
      <content type="text"><![CDATA[祝贺大家新春快乐，鸡年吉祥，恭喜发财！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[随笔：有时候几件趣事能让你 Recovery]]></title>
      <url>%2F2017%2F01%2F22%2F%E9%9A%8F%E7%AC%94%EF%BC%9A%E6%9C%89%E6%97%B6%E5%80%99%E5%87%A0%E4%BB%B6%E8%B6%A3%E4%BA%8B%E8%83%BD%E8%AE%A9%E4%BD%A0-Recovery%2F</url>
      <content type="text"><![CDATA[最近，身体有些不适，脑袋一直晕乎乎的，周六在家躺了一天，晚上尽量早点休息。大过年的，完全很淡定，心平气和，完全不像还有4天要过年的节奏。 好在今天下午坐车的时候，被逗逼给乐醒了，恍然大悟，头脑也不晕了。这个可以有！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[原生Js打印效果]]></title>
      <url>%2F2017%2F01%2F16%2F%E5%8E%9F%E7%94%9Fjs%E6%89%93%E5%8D%B0%E6%95%88%E6%9E%9C%2F</url>
      <content type="text"><![CDATA[原生js打印效果，主要用到以下几个知识点： 1.nbsp;半角的不断行的空白格（推荐使用）2.ensp; 半角的空格 3.emsp; 全角的空格,每个字符前面都加上&amp; 2.string.charAt()返回指定位置的字符 3.indexOf(),array.indexOf(item,start)返回某个指定的字符串在字符串中首次出现的位置 4.substring(),code.substring(0,pos)中的substring()用于提取字符串中介于两个指定下标之间的字符，substring()方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符。 5.classList.add(),classList 属性返回元素的类名，作为 DOMTokenList 对象。该属性用于在元素中添加add，移除remove及切换toggle CSS 类。 源代码如下:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"/&gt; &lt;meta name="Keywords" content="" /&gt; &lt;meta name="Description" content="" /&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="viewpoint" content="width=device-width,initial-scale=1,user-scalable= no"/&gt; &lt;title&gt;0116 printer&lt;/title&gt; &lt;style type="text/css"&gt; .typewriter&#123;display:none;width:40em;line-height:1.6;border:1px solid #2dcb70;padding:1em 3em;margin:5em auto;font-family:Microsoft Yahei;font-weight:normal;white-space:normal;-webkit-font-smoothing:antialiased;/*字符反锯齿*/;color:hsla(0,10%,20%,0.9);&#125; .typewriter:after&#123;content:"_";animation:flash .6s steps(2,start) infinite;-webkit-animation:flash .6s steps(2,start) infinite;&#125; .typewriter.gameover:after&#123;display:none;&#125; @keyframes flash&#123; 0%&#123;visibility:visible;&#125; 100%&#123;visibility:hidden;&#125; &#125; @-webkit-keyframes flash&#123; 0%&#123;visibility:visible;&#125; 100%&#123;visibility:hidden;&#125; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class="typewriter"&gt; &lt;!--1.&amp;nbsp; 半角的不断行的空白格（推荐使用）2.&amp;ensp; 半角的空格 3.&amp;emsp; 全角的空格--&gt; 1. Whatever is worth doing is worth doing well.&lt;br /&gt; &amp;emsp;任何值得做的，就把它做好。&lt;br /&gt;&lt;br /&gt; 2. Happiness is a way station between too much and too little.&lt;br /&gt; &amp;emsp;幸福是太多和太少之间的一站。&lt;br /&gt;&lt;br /&gt; 3. In love folly is always sweet.&lt;br /&gt; &amp;emsp;恋爱中，干傻事总是让人感到十分美妙。&lt;br /&gt;&lt;br /&gt; 4. The hard part isn’t making the decision. It’s living with it.&lt;br /&gt; &amp;emsp;做出决定并不困难，困难的是接受决定。&lt;br /&gt;&lt;br /&gt; 5. Your happy passer-by all knows, my distressed there is no place hides.&lt;br /&gt; &amp;emsp;你的幸福路人皆知，我的狼狈无处遁形。&lt;br /&gt;&lt;br /&gt; 6. You may be out of my sight, but never out of my mind.&lt;br /&gt; &amp;emsp;你也许已走出我的视线，但从未走出我的思念。 &lt;/div&gt; &lt;/body&gt; &lt;script&gt; (function()&#123; var typewriter=document.querySelector(".typewriter"), code=typewriter.innerHTML, pos=0, len=code.length; typewriter.innerHTML=""; typewriter.style.display="block"; function typewriting()&#123; pos++; if(pos &lt;= len)&#123; switch(code.charAt(pos)) //charAt()返回指定位置的字符 &#123; case "&lt;": //&lt;&gt;代码开始的字符 pos = code.indexOf("&gt;",pos); //array.indexOf(item,start)返回某个指定的字符串在字符串中首次出现的位置 break; case "&amp;": pos = code.indexOf(";",pos); break; &#125; typewriter.innerHTML=code.substring(0,pos);//substring()用于提取字符串中介于两个指定下标之间的字符，substring() 方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符。 setTimeout(typewriting,100); &#125; else &#123; typewriter.classList.add("gameover");//classList 属性返回元素的类名，作为 DOMTokenList 对象。该属性用于在元素中添加，移除及切换 CSS 类。 &#125; &#125; typewriting(); &#125;)(); &lt;/script&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[随笔：大海我的故乡]]></title>
      <url>%2F2017%2F01%2F15%2F%E9%9A%8F%E7%AC%94%EF%BC%9A%E5%A4%A7%E6%B5%B7%E6%88%91%E7%9A%84%E6%95%85%E4%B9%A1%2F</url>
      <content type="text"><![CDATA[从小习惯了腥鱼烂虾的味道，每次回家都感觉特别温暖！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Goast Button,幽灵按钮特效]]></title>
      <url>%2F2017%2F01%2F15%2Fgoast-button-%E5%B9%BD%E7%81%B5%E6%8C%89%E9%92%AE%E7%89%B9%E6%95%88%2F</url>
      <content type="text"><![CDATA[有时候能看到这种效果的按钮，效果很棒，请看下图 极客学院有专门课程讲解，我们来看一下源代码! Html12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;!DOCTYPE html&gt;&lt;html lang="ZH-CN"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta name="keywords" content=""/&gt;&lt;meta name="description" content=""/&gt;&lt;link rel="shortcut icon" href=""&gt;&lt;title&gt;20170113 goast&lt;/title&gt;&lt;link type="" rel="stylesheet" href="style/0113.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="box"&gt; &lt;div class="link link-miss"&gt; &lt;span class="icon"&gt;&lt;/span&gt; &lt;a href="#" class="button" data-title="My mission clear"&gt; &lt;span class="line line-top"&gt;&lt;/span&gt; &lt;span class="line line-left"&gt;&lt;/span&gt; &lt;span class="line line-bottom"&gt;&lt;/span&gt; &lt;span class="line line-right"&gt;&lt;/span&gt; MISSION &lt;/a&gt; &lt;/div&gt; &lt;div class="link link-play"&gt; &lt;span class="icon"&gt;&lt;/span&gt; &lt;a href="#" class="button" data-title="This is my palyground"&gt; &lt;span class="line line-top"&gt;&lt;/span&gt; &lt;span class="line line-left"&gt;&lt;/span&gt; &lt;span class="line line-bottom"&gt;&lt;/span&gt; &lt;span class="line line-right"&gt;&lt;/span&gt; PLAY &lt;/a&gt; &lt;/div&gt; &lt;div class="link link-touch"&gt; &lt;span class="icon"&gt;&lt;/span&gt; &lt;a href="#" class="button" data-title="Let's do something together"&gt; &lt;span class="line line-top"&gt;&lt;/span&gt; &lt;span class="line line-left"&gt;&lt;/span&gt; &lt;span class="line line-bottom"&gt;&lt;/span&gt; &lt;span class="line line-right"&gt;&lt;/span&gt; TOUCH &lt;/a&gt; &lt;/div&gt; &lt;div class="tip"&gt; &lt;em&gt;&lt;/em&gt; &lt;!--提示性文字--&gt; &lt;span&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;script src="http://libs.baidu.com/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="js/0113.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; Css 这里涉及部分css3属性，所以对于低版本的browser的支持效果不是很好 1234567891011121314151617181920212223242526272829303132body&#123;background: #333;font-family: 'Microsoft Yahei';&#125;a&#123;text-decoration:none;cursor:pointer;&#125;.box&#123;width:800px;height:280px;margin: 50px auto;&#125;.box .link&#123;width:205px;height:280px;margin:10px 20px;float:left;position:relative;&#125;.link .icon&#123;width:100%;height:190px;display:block;transition:all 1s linear;-webkit-transition:all 1s linear;-moz-transition:all 1s linear;-ms-transition:all 1s linear;&#125;.link-miss .icon&#123;background: url('../images/mission.png') no-repeat center center;&#125;.link-play .icon&#123;background: url('../images/play.png') no-repeat center center;&#125;.link-touch .icon&#123;background: url('../images/touch.png') no-repeat center center;&#125;.link .icon:hover&#123;-webkit-transform: rotate(360deg) scale(1.1); -o-transform: rotate(360deg) scale(1.1);-moz-transform: rotate(360deg) scale(1.1);-ms-transform: rotate(360deg) scale(1.1);&#125;.button&#123;display:block;font-size:16px;font-weight:bolder;border:2px solid rgba(255,255,255,.8);padding-left:20px;margin: 0 auto;width:180px;height:50px;line-height:50px;color: #2dcb70;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;background: url('../images/allow.png') /*设置背景指示图位移*/ no-repeat 130px 50%;position:relative;transition:all 0.3s ease;-webkit-transition:all 0.3s ease;-moz-transition:all 0.3s ease;-ms-transition:all 0.3s ease;&#125;.button:hover&#123; border:2px solid rgba(255,255,255,1);background-position:140px center;&#125;.button .line&#123;display:block;position:absolute;background:none;transition:all 0.2s ease;-webkit-transition:all 0.2s ease;-moz-transition:all 0.2s ease;-ms-transition:all 0.2s ease;&#125;/*过渡效果必须放在初始值*/.button:hover .line&#123;background:#fff;&#125; /*background:#fff背景色为白色*//*1、高度不变 2宽度在变 3位置在变*/.button .line-top&#123;height:2px;width:0px;left:-110%;top:-2px;&#125;.button:hover .line-top&#123;width:100%;left:-2px;&#125;.button .line-bottom&#123;height:2px;width:0px;right:-110%;bottom:-2px;&#125;.button:hover .line-bottom&#123;width:100%;right:-2px;&#125;/*1、宽度不变 2高度在变 3位置在变*/.button .line-left&#123;width:2px;height:0;left:-2px;bottom:-110%;&#125;.button:hover .line-left&#123;height:100%;bottom:-2px;&#125;.button .line-right&#123;width:2px;height:0;right:-2px;top:-110%;&#125;.button:hover .line-right&#123;height:100%;top:-2px;&#125;.box .tip&#123;position:absolute;padding:0 14px;height:35px;line-height:35px;background: #2dcb70;color:#fff;top:160px;font-size:16px;font-weight:normal;text-transform:none;/*uppercase;capitalize;lowercase转换不同文本的大小写*/margin:0 auto;border-radius:3px;opacity:0;/*透明度为0隐藏*/&#125;.tip em&#123;font-style:normal;&#125;.tip span&#123;width:0;height:0;overflow:hidden;left:50%;margin-left:-3px; position:absolute;top:100%;border:7px solid transparent;border-top-color: #2dcb70;/*倒三角*/&#125; 这里有必要提一下几个知识点： background属性eg:body{background: #00FF00 url(bgimage.gif) no-repeat fixed top;}可能的值：background-position 规定背景图像的位置。background-size 规定背景图片的尺寸。background-repeat 规定如何重复背景图像。background-origin 规定背景图片的定位区域。background-clip 规定背景的绘制区域。background-attachment 规定背景图像是否固定或者随着页面的其余部分滚动。 transition属性eg:div{width:100px;transition: width 2s;-moz-transition: width 2s; / Firefox 4 /-webkit-transition: width 2s; / Safari 和 Chrome /-o-transition: width 2s; / Opera /}语法:transition-property 规定设置过渡效果的 CSS 属性的名称。transition-duration 规定完成过渡效果需要多少秒或毫秒。transition-timing-function 规定速度效果的速度曲线。transition-delay 定义过渡效果何时开始。 注意：transition属性必须设置在代码的初始值里 text-transform属性text-transform:转换不同文本的大小写，值有：uppercase(大写);capitalize(首字母大写);lowercase(小写) Javascript 这里用到jquery12345678910111213$(function()&#123; $('.link .button').hover(function()&#123; var title = $(this).attr('data-title'); $('em').text(title); //em承载的内容就是title var pos = $(this).offset().left; var dis = ($('.tip').outerWidth() - $(this).outerWidth())/2; var f = pos - dis; $('.tip').css(&#123;'left':f+'px'&#125;).animate(&#123;'top':'190','opacity':'1'&#125;,300);; &#125;,function()&#123; $('.tip').animate(&#123;'top':160,"opacity":'0'&#125;,300); &#125;); &#125;); 总结： 1.位移的计算：var pos = $(this).offset().left;var dis = ($(&apos;.tip&apos;).outerWidth() - $(this).outerWidth())/2; var f = pos - dis;&lt;/code&gt; 2.很多css3属性]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[GIT One :How to Use Git]]></title>
      <url>%2F2017%2F01%2F11%2FGIT-one-how-to-use-git%2F</url>
      <content type="text"><![CDATA[git与github紧密相连，git一定要回使用！git 常用操作以及快捷键，学习来源 廖雪峰老师官方网站，廖老师讲得很是不错的，对于初学者很实用！ 1$ mkdir casework //创建一个名为‘casework’文件夹 1$ cd casework 1$ pwd //显示当前目录 1$ git init //把这个目录变成git可以管理的工具 在当前目录下，新建一个readme.txt 1$ git add readme.txt //把readme.txt增加到暂存区 1$ git commit -m "write a readme file" //把暂存区的readme提交到master分支下 修改当前的readme.txt文件 1$ git status //查看当前仓库的状态 1$ git diff //查看修改的内容 再次修改readme文件 1$ git add readme.txt //把readme.txt增加到暂存区 1$ git commit -m "append GPL" //把暂存区的readme提交到master分支下 1$ git log //用git查看历史版本或者git log --pretty = oneline 1$git reset --hard HEAD^ //HEAD表示当前的版本，回到上一个版本HEAD^ 1$ cat readme.txt //查看内容 1$ git log //查看现在版本库的状态 1$ git reset --hard 382412 //又回到之前的最新版本 1$ git reflog //查看记录每次版本的id In conclusion: HEAD表示当前的版本，回到上一个版本HEAD^,HEAD用于版本之间历史的穿梭 git reset –hard commit_id 穿梭前用git log ，这样能知道会退到哪一个版本 重返未来用git reflog]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[图片的一扫而过的闪影]]></title>
      <url>%2F2017%2F01%2F09%2F%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E6%89%AB%E8%80%8C%E8%BF%87%E7%9A%84%E9%97%AA%E5%BD%B1%2F</url>
      <content type="text"><![CDATA[一些网站的logo采用的这种效果 这里用到的依然是伪元素，:before和:after，这里需要注意的一点的是用到了position:absolute，只有设定了位移，幻影才能随之漂浮！ 实例一1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt; .banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;position:relative;&#125; .banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 300px; height: 15px;outline:px solid red; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg); -webkit-animation: searchLights 1s ease-in 0.5s infinite; -o-animation: searchLights 1.s ease-in 0.5s infinite; animation: searchLights 1s ease-in 0.5s infinite;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 其实，就是一个：before加上css中的animation效果，这里我将animation-duration的时间改为0.8，即完成动画所花费的时间缩短了0.2s,but阴影的宽度加长了15px 示例二123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt;.banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;&#125;.banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 200px; height: 30px; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg);-webkit-animation: searchLights 0.8s ease-in 0.5s infinite; -o-animation: searchLights 0.8.s ease-in 0.5s infinite; animation: searchLights 0.8s ease-in 0.5s infinite;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 实例三 这里的animation: searchLights 0.8s ease-in 0.5s infinite;中的infinite是无限次播放，把它去掉或者设置1次就能实现只闪一下的效果，并且还把animation: searchLights 0.8s ease-in 0.5s infinite;中的延时播放animation-delay:：0.5s去掉，就是一跳转就实现 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt;.banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;&#125;.banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 200px; height: 30px; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg);-webkit-animation: searchLights 0.8s ease-in 1; -o-animation: searchLights 0.8.s ease-in .1; animation: searchLights 0.8s ease-in 1;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[伪元素：：Before和after的梯形效果]]></title>
      <url>%2F2017%2F01%2F08%2F%E4%BC%AA%E5%85%83%E7%B4%A0%EF%BC%9A%EF%BC%9Abefore%E5%92%8Cafter%E7%9A%84%E6%A2%AF%E5%BD%A2%E6%95%88%E6%9E%9C%2F</url>
      <content type="text"><![CDATA[伪元素介绍 CSS 伪元素用于向某些选择器设置特殊效果 伪元素的语法： selector:pseudo-element {property:value;} “:before” 伪元素可以在元素的内容前面插入新内容。 “:after” 伪元素可以在元素的内容之后插入新内容。 伪元素的梯形特效实例一：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px rgba(0, 0, 0, 0);border-top: rgb(249, 247, 246) 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 其实，这里只是一个正方形盖在了div上面，border的边框其中还带有opacity:0,如 实例二：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px yellow;border-top: red 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 优化与改进 至于为什么：：after里的边框border—left和border-top会是这种两个三角形组成的长方形，我也是搞不明白。不过，这里的三角形可以根据透明度（opacity属性）来调整相应的透明度 实例三：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px rgba(0,0,0,0.9);border-top: white 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[个人网站 搭建经历]]></title>
      <url>%2F2017%2F01%2F06%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is My very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 建立个人站点经过从去年10月份某天晚上，看过几位前端大牛，比如我非常钦佩的 张雯莉 ，还有 IronPans等，自己的站点建得很棒，心血来潮，也想尝试一下。后来得知有一种搭建个人站点的Hexo框架很方便也很省事。经过2天的深挖，看 技术文档，这里不得不佩服，这位来自厦门的hexo+next主题的创始人 iissnan，年轻有为，好好学习！ 本人主要参考的文章来自 简书 使用Github搭建Hexo技术博客托管在GitHub Pages上–安装教程 Preparation建个人站点前段时间，也有点迷茫，因为自己对于后端、服务器的相关知识一点不了解。现在建起来了，还是对后端有点一无所知，只是对域名、域名解析、git的使用操作有了更深刻的了解吧。关于hexo+github建站的教程网上很多，这里我推荐简书的使用Github搭建Hexo技术博客托管在GitHub Pages上–安装教程 ，这里就不多阐述。这里主要讲讲自己踩过的坑 Git与github的绑定Git是分布式的代码管理工具，远程的代码管理是基于ssh的，所以要使用远程的git则需要ssh的配置。github的ssh配置如下： 设置git的user name和email：$ git config –global user.name “xuhaiyan”$ git config –global user.email “haiyan.xu.vip@gmail.com” 生成SSH密钥过程：1.查看是否已经有了ssh密钥：cd ~/.ssh,如果没有密钥则不会有此文件夹，有则备份删除2.生存密钥：$ ssh-keygen -t rsa -C “your@gmail.com”按3个回车，密码为空。 在github上添加ssh密钥，这要添加的是”id_rsa.pub’里面的公钥。 测试：ssh git@github.com 域名创建和域名解析自己是在自己阿里云买的，很便宜，当然如果顶级域名以.cn或者.com费用还是可以的，域名买好之后，还得去搞个服务器吧，好存储资源，阿里云服务器还是有点小贵的，所以只能把本地代码托管在github上，这也是为什么要用git的原因。 安装Node.js安装地址：nodejs,nodejs是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。妈的，nodejs学问太过深奥，我估计得等到明年在慢慢磨，这里只是借用nodejs的npm安装hexo和 next 安装和部署Hexo 打开git客户端,Git bash Here 1$ npm install -g hexo 1$ hexo init ######注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。 Hexo命令 12345hexo new post "wendang title" #新建,default有三种布局，post、page、draft，后面加文字标题hexo new page "pageName" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHub Create a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 小结 有些东西看似很复杂，但是如果有毅力坚持去磨的话还是有希望攻破的，加油！niaogege 最近访客]]></content>
    </entry>

    
  
  
</search>
