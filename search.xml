<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[图片的一扫而过的闪影]]></title>
      <url>%2F2017%2F01%2F09%2F%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E6%89%AB%E8%80%8C%E8%BF%87%E7%9A%84%E9%97%AA%E5%BD%B1%2F</url>
      <content type="text"><![CDATA[一些网站的logo采用的这种效果 这里用到的依然是伪元素，:before和:after，这里需要注意的一点的是用到了position:absolute，只有设定了位移，幻影才能随之漂浮！ 实例一1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt; .banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;position:relative;&#125; .banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 300px; height: 15px;outline:px solid red; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg); -webkit-animation: searchLights 1s ease-in 0.5s infinite; -o-animation: searchLights 1.s ease-in 0.5s infinite; animation: searchLights 1s ease-in 0.5s infinite;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 其实，就是一个：before加上css中的animation效果，这里我将animation-duration的时间改为0.8，即完成动画所花费的时间缩短了0.2s,but阴影的宽度加长了15px 示例二123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt;.banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;&#125;.banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 200px; height: 30px; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg);-webkit-animation: searchLights 0.8s ease-in 0.5s infinite; -o-animation: searchLights 0.8.s ease-in 0.5s infinite; animation: searchLights 0.8s ease-in 0.5s infinite;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 实例三 这里的animation: searchLights 0.8s ease-in 0.5s infinite;中的infinite是无限次播放，把它去掉或者设置1次就能实现只闪一下的效果，并且还把animation: searchLights 0.8s ease-in 0.5s infinite;中的延时播放animation-delay:：0.5s去掉，就是一跳转就实现 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;图片效果&lt;/title&gt;&lt;style type="text/css"&gt;.banner&#123;float:left;width: 250px; padding-top:10px;display:line-block;&#125;.banner:before&#123; content:""; position: absolute; left: -600px; top: -600px; width: 200px; height: 30px; background-color: rgba(255,255,255,.6); -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg);-webkit-animation: searchLights 0.8s ease-in 1; -o-animation: searchLights 0.8.s ease-in .1; animation: searchLights 0.8s ease-in 1;&#125;@-webkit-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-o-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@-moz-keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;@keyframes searchLights &#123; 0% &#123; left: -200px; top: 0; &#125; to &#123; left: 220px; top: 100px; &#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="banner"&gt;&lt;img src="http://bbs.zizhuxuexi.cn/static/image/fg_hlximg/logo.png" alt="学习网" /&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[伪元素：：before和after的梯形效果]]></title>
      <url>%2F2017%2F01%2F08%2F%E4%BC%AA%E5%85%83%E7%B4%A0%EF%BC%9A%EF%BC%9Abefore%E5%92%8Cafter%E7%9A%84%E6%A2%AF%E5%BD%A2%E6%95%88%E6%9E%9C%2F</url>
      <content type="text"><![CDATA[伪元素介绍 CSS 伪元素用于向某些选择器设置特殊效果 伪元素的语法： selector:pseudo-element {property:value;} “:before” 伪元素可以在元素的内容前面插入新内容。 “:after” 伪元素可以在元素的内容之后插入新内容。 伪元素的梯形特效实例一：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px rgba(0, 0, 0, 0);border-top: rgb(249, 247, 246) 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 其实，这里只是一个正方形盖在了div上面，border的边框其中还带有opacity:0,如 实例二：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px yellow;border-top: red 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 优化与改进 至于为什么：：after里的边框border—left和border-top会是这种两个三角形组成的长方形，我也是搞不明白。不过，这里的三角形可以根据透明度（opacity属性）来调整相应的透明度 实例三：&lt;style&gt; #con_right_tit5{display: block;height:45px;position:absolute;font-size: 18px;line-height: 45px;background: #6e80be;color:white;padding: 0 38px 0 18px;transition:all 0.5s ease-in-out;-webkit-transition:all 0.5s ease-in-out;-moz-transition:all 0.5s ease-in-out;top:70px;} #con_right_tit5 a{color: white;} #con_right_tit5:hover{background: black;} #con_right_tit5::after{content: &quot;&quot;;border-left: solid 22px rgba(0,0,0,0.9);border-top: white 20px solid;position: absolute;right: 0;top: 0;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;con_right_tit5&quot;&gt;教育资讯&lt;/div&gt; &lt;/body&gt; 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[个人网站 搭建经历]]></title>
      <url>%2F2017%2F01%2F06%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is My very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 建立个人站点经过从去年10月份某天晚上，看过几位前端大牛，比如我非常钦佩的 张雯莉 ，还有 IronPans等，自己的站点建得很棒，心血来潮，也想尝试一下。后来得知有一种搭建个人站点的Hexo框架很方便也很省事。经过2天的深挖，看 技术文档，这里不得不佩服，这位来自厦门的hexo+next主题的创始人 iissnan，年轻有为，好好学习！ 本人主要参考的文章来自 简书 使用Github搭建Hexo技术博客托管在GitHub Pages上–安装教程 Preparation建个人站点前段时间，也有点迷茫，因为自己对于后端、服务器的相关知识一点不了解。现在建起来了，还是对后端有点一无所知，只是对域名、域名解析、git的使用操作有了更深刻的了解吧。关于hexo+github建站的教程网上很多，这里我推荐简书的使用Github搭建Hexo技术博客托管在GitHub Pages上–安装教程 ，这里就不多阐述。这里主要讲讲自己踩过的坑 Git与github的绑定Git是分布式的代码管理工具，远程的代码管理是基于ssh的，所以要使用远程的git则需要ssh的配置。github的ssh配置如下： 设置git的user name和email：$ git config –global user.name “xuhaiyan”$ git config –global user.email “haiyan.xu.vip@gmail.com” 生成SSH密钥过程：1.查看是否已经有了ssh密钥：cd ~/.ssh,如果没有密钥则不会有此文件夹，有则备份删除2.生存密钥：$ ssh-keygen -t rsa -C “your@gmail.com”按3个回车，密码为空。 在github上添加ssh密钥，这要添加的是”id_rsa.pub’里面的公钥。 测试：ssh git@github.com 域名创建和域名解析自己是在自己阿里云买的，很便宜，当然如果顶级域名以.cn或者.com费用还是可以的，域名买好之后，还得去搞个服务器吧，好存储资源，阿里云服务器还是有点小贵的，所以只能把本地代码托管在github上，这也是为什么要用git的原因。 安装Node.js安装地址：nodejs,nodejs是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。妈的，nodejs学问太过深奥，我估计得等到明年在慢慢磨，这里只是借用nodejs的npm安装hexo和 next 安装和部署Hexo 打开git客户端,Git bash Here 1$ npm install -g hexo 1$ hexo init ######注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。 Hexo命令 12345hexo new post "wendang title" #新建,default有三种布局，post、page、draft，后面加文字标题hexo new page "pageName" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHub Create a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 小结 有些东西看似很复杂，但是如果有毅力坚持去磨的话还是有希望攻破的，加油！niaogege 最近访客]]></content>
    </entry>

    
  
  
</search>
